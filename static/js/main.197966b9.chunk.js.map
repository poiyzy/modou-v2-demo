{"version":3,"sources":["components/PrivateRoute/index.js","components/AppHeader/index.js","constants/Nodes.js","lib/MxGraphUtils.js","components/AlertBar/index.js","components/Workflow/index.js","components/NodesListBar/index.js","components/NodeDetailsPanel/index.js","utils/common.js","components/ConfigGroup/input.js","components/ConfigGroup/array-input.js","components/ConfigGroup/select.js","components/ConfigGroup/multi-select.js","components/ConfigGroup/aggregate-function-input.js","components/ConfigGroup/aggregate-functions.js","components/ConfigGroup/fixed-array-input.js","constants/index.js","components/ConditionForm/index.js","components/ConfigGroup/condition-groups.js","components/ConfigGroup/object-input.js","components/ConfigGroup/index.js","components/ProcessConfigPanel/index.js","components/ConfigSettings/AddNewColumnSetting/index.js","components/ConfigSettings/FilterColumnSetting/index.js","components/ConfigSettings/RenameColumnSetting/index.js","components/ConfigSettings/KeepOrDropColumnSetting/index.js","components/ConfigSettings/index.js","components/SavedConfigsList/index.js","components/BeforeConfigPanel/index.js","components/AfterConfigPanel/index.js","components/DetailConfigPanel/index.js","components/DetailSettingBar/index.js","components/LogsTimeline/index.js","components/PredictionDetailsPanel/index.js","components/PublishTemplateModal/index.js","containers/Workspace/index.js","containers/Projects/index.js","containers/Templates/index.js","components/VisualizedLabelDefinition/index.js","components/DefinePrediction/index.js","components/AddPredictionLabel/index.js","containers/Labels/index.js","containers/Admin/person-form.js","containers/Admin/data-source-form.js","containers/Admin/account-detail.js","containers/Admin/person.js","containers/Admin/data-source.js","containers/Admin/index.js","containers/Login/index.js","App.js","services/StompWebsocket.js","stores/RulesStore.js","label_logic.js","stores/QueriesStore.js","stores/UserStore.js","templates.js","stores/TemplatesStore.js","stores/AdminStore.js","stores/ProjectStore.js","utils/json-schema-validator.js","index.js"],"names":["inject","observer","children","userStore","rest","loading","render","location","authed","to","pathname","state","from","props","className","activeClassName","onClick","axios","get","then","res","signOut","stompWebsocket","disconnect","routingStore","push","src","alt","CrossValidationInputConfig","type","key","label","properties","dataType","defaultValue","FillDefaultInputConfig","placeholder","selectOptions","value","name","NODES","Alignment","iconClassName","defaultTemplate","id","skip","comment","accept","transformer","before","process","align","after","parent","persistent","inputFormConfig","required","optionsSetting","readFromNodeAttr","transform","valueAttr","nameAttr","Aggregation","items","BinaryLabel","Bucketizer","bucket","output","relatedInfo","LogisticRegression","train","algoName","disabled","length","GradientBoostingClassifier","RandomForestClassifier","NaFiller","fillDefaults","Distinct","distinct","DynamicColumnSelector","dynamicColumnSelector","Explode","explode","FeaturePreselector","Pivot","RandomSample","Sharding","Union","SplitTrainAndTest","min","max","Merge","mergeBy","MBeanLoader","Standardizier","mx","mxObjectCodec","mxUtils","mxClient","mxEvent","mxGraph","mxConstants","mxRubberband","mxPerimeter","mxEdgeStyle","mxToolbar","mxCell","mxGeometry","mxKeyHandler","MxGraph2Json","newObject","createXmlDocument","createElement","prop","setAttribute","model","Object","keys","cells","map","iCell","currentCell","getCell","undefined","filter","item","GraphX","container","toolbar","addNewNode","updateLayouts","connectNodes","selectNode","removeNodes","isBrowserSupported","error","disableContextMenu","this","_graph","setConnectable","setAllowDanglingEdges","onDroppedCallback","getJsonModel","onConnected","sourceId","targetId","onSelectNode","onCellsRemoved","cellIds","cell","indexOf","_toolbar","enabled","_initToolbar","_initConnectionHandler","_initSelectionCellsHandler","_initCellsRemovedHandler","_initDeleteKeyHandler","labelDisplayOveride","styling","convertValueToString","isNode","nodeName","toLowerCase","getAttribute","isVertex","style","STYLE_SHAPE","SHAPE_RECTANGLE","STYLE_PERIMETER","RectanglePerimeter","STYLE_STROKECOLOR","STYLE_ROUNDED","STYLE_FILLCOLOR","STYLE_GRADIENTCOLOR","STYLE_FONTCOLOR","STYLE_ALIGN","ALIGN_CENTER","STYLE_VERTICAL_ALIGN","ALIGN_MIDDLE","STYLE_FONTSIZE","STYLE_FONTSTYLE","getStylesheet","putDefaultVertexStyle","getDefaultEdgeStyle","STYLE_LABEL_BACKGROUNDCOLOR","STYLE_EDGE","ElbowConnector","putDefaultEdgeStyle","decode","getModel","dataModel","clear","_vertices","_dataModel","getDefaultParent","beginUpdate","layouts","c","edge","node","vertex","insertVertex","geometry","x","y","width","height","setId","setValue","insertEdge","source","target","e","console","endUpdate","icon","w","h","setVertex","img","_addToolbarItem","getSelectionModel","addListener","CHANGE","evt","tmp","isSelectionEmpty","setOpacity","document","querySelectorAll","forEach","addVertex","graph","prototype","image","consume","makeDraggable","stopEditing","cloneCell","element","uuidv1","addCell","setSelectionCell","connectionHandler","CONNECT","sender","getProperty","getTerminal","selectionCellsHandler","ADD","getHandledSelectionCells","isEdge","originCellsRemoved","cellsRemoved","bind","keyHandler","bindKey","isEnabled","removeCells","stringifyWithoutCircular","json","JSON","stringify","localName","results","attributes","attrKey","attribute","nodeValue","AlertBar","title","desc","Component","Workflow","currentProject","editProjectDetail","project","showModal","NodeListBar","useState","nodes","setNodes","firstUpdate","useRef","useEffect","current","window","graphxUUID","isShowing","onChange","event","keyword","matchedNodes","omitBy","includes","data-node-key","data-node-name","description","SelectOption","Option","NodeDetailsPanel","eventOrValue","updateNodeDetailSetting","checked","featureSets","featureSet","i","makeObservable","isCollapsed","join","changeSetting","htmlFor","mode","_renderFeatureSetOptions","observable","action","safeAssign","stageConfig","groupKey","propertyKey","safeGet","config","groupValue","trimStartDollarSign","columnName","startsWith","split","Timer","callback","timerCalc","timer","tries","clearTimeout","setTimeout","Input","group","property","onValueChange","collapsed","setCollapsed","DownCircleOutlined","UpCircleOutlined","ArrayInput","Select","generateSubmenus","sourceData","option","Item","n","displayAttr","keyAttr","menus","selectedpropertyValue","selectedValueLabel","find","overlay","trigger","MultiSelect","allowClear","_generateSelectOptions","React","InputGroup","Group","AvailableAggregateFunctions","AggregateFunctionInput","setState","columns","params","decayIntervalColumn","decayRatio","produce","draft","limit","onConfirm","func","assign","onNew","section","compact","handleDecayIntervalColumnChange","handleDecayRatioChange","handleLimitChange","aggFunctionOptions","propery","f","paramsSection","_generateParamsSection","handleFunctionNameChange","handleColumsChange","onCancel","handleConfirm","confirmAndResetInput","propTyps","PropTypes","string","isRequired","object","AggregateFunctionItem","onDelete","DeleteOutlined","AggregateFunctions","nextState","functions","splice","_handleValueChange","showAggregateFunctionInput","toJS","PlusCircleOutlined","showInput","handleDelete","hideInput","addFunctionAndCloseInput","addFunctionOnly","FixedArrayInput","arrayValue","setArrayValue","handleValueChange","updatedArrayValue","range","MergeByConditionOperators","FormItem","ConditionForm","useForm","form","layout","onFinish","values","initialValues","operator","rules","op","requried","htmlType","ConditionGroupItem","conditionGroup","ConditionGroups","conditionGroups","conditionFormVisible","setConditionFormVisible","condition","leftColumn","rightColumn","ObjectInput","toUpperCase","objectContent","p","ConfigGroup","content","ProcessConfigPanel","nextProcessConfig","updateNodeTransformerSetting","formConfig","AddNewColumnSetting","formData","table","refs","column","formula","added","cancel","ref","OPERATIONS","FilterColumnSetting","selectOperation","currentConfig","filterValue","data","_renderOperations","currentOperator","computed","RenameColumnSetting","newName","KeepOrDropColumnSetting","defaultChecked","CONFIG_PANELS","ConfigSettingPanel","configType","currentSettingPanel","selectConfigPanels","_renderMenu","currentSettingPanelName","_renderSettingPanels","SavedConfigsList","idx","doAction","removeRule","setCurrentConfigInfo","configs","m","_renderActions","flat","BeforeConfigPanel","isShowingPanel","currentConfigInfo","rule","update","$splice","closeConfigPanel","addedNewRule","openConfigPanel","AfterConfigPanel","DetailConfigPanel","currentTab","switchTab","renderPanel","findNodeById","tabName","DetailSettingBar","Fragment","LogsTimeline","PredictionDetailsPanel","_reactSetting","delete","navigateTo","debounce","updateProject","projectType","_renderSettingBtns","PublishTemplateModal","publishTemplate","closeModal","Workspace","match","matchPath","path","strict","graphxInstanceUUID","uuidV4","projectId","_getProjectId","projectStore","setCurrentProject","initGraphx","rulesStore","templatesStore","setEditingProjectDetail","isShowingToolbar","isShowingNodeDetail","getCurrentNode","isShowingPredictionDetail","showPublishTemplateModal","querySelector","setGraphXClient","isEditingProjectDetail","currentNodeId","isEditing","Projects","projects","newProject","minWidth","navigateToProjectDetailPage","moment","lastRun","format","createdTime","creatorName","Templates","init","graphx","currentTemplate","projectName","projectDesc","create","templateId","template","templates","t","previewTemplate","size","VisualizedLabelDefinition","queries","selectedFilterId","deleteFilter","duplicateFilter","selectFilter","addEmptyFilter","ti","fi","logicOperator","conditions","aggregation","slice","ci","DefinePrediction","aggFuncOptions","operatorOptions","AddPredictionLabel","chooseTable","cIdx","chooseColumn","chooseAggFunc","k","chooseOperator","updateTable","updateFilter","selectedFilter","cancelEdit","addEmptyCondition","cancelEmptyCondition","_renderTableOptions","tableName","_renderColumnOptions","_renderAggFuncOptions","aggregate","_renderOperatorOptions","agregation","Labels","queriesStore","parsedQueries","cancenlEmptyCondition","updateCondition","PersonForm","log","resetFields","role","valuePropName","DataSourceForm","AccountDetail","MenuItem","Person","menu","dropdown","MoreOutlined","admin","StarFilled","avatarUrl","joinedAt","DataSource","creatdedAt","TabPane","setCurrentTab","adminStore","fetchUsers","fetchDataSources","formContent","person","createUser","createDataSource","tabKey","tab","users","dataSources","ds","history","forgetPassword","requiredMark","FormData","append","email","password","post","connect","signIn","extra","App","exact","TopicMessageCallback","topic","StompWebsocket","endpoint","messageCallbacks","conn","topics","connected","rejoinTimer","sendBuffer","newRef","toString","successCallback","errorCallback","sock","SockJS","Stomp","over","onConnOpen","other","onConnClose","messageCallback","message","headers","send","reconnect","reset","subscribe","onMessage","frame","destination","mc","RulesStore","nodesMap","updateDebounce","nodeType","l","_updateProject","parentId","selfId","concat","childNode","excuteAt","modelJson","parse","uuidsMapping","newLayout","edges","r","audienceNumber","updatedTime","filters","tableId","columnId","emptyFilter","QueriesStore","selectedRowTId","groupBy","filterId","newFilterId","cloneDeep","filterIdx","$push","columndId","$set","UserStore","response","catch","status","registerCallback","onStompMessage","localStorage","setItem","removeItem","TemplatesStore","templatesJSON","applyTemplate","Date","fakePerson","fakeDataSource","host","port","database","username","AdminStore","makeAutoObservable","ProjectStore","currentProjectId","_makeBinding","cid","fetchAllProjects","_setCurrentProjectForRulesStore","cb","makeRef","bindings","client","graphxClient","payload","body","invokeCallback","projectIdx","imUpdate","ajv","Ajv","addSchema","configSchema","transformerSchema","magicBeanNodeSchema","mbeanSchema","compile","workflowSchema","browserHistory","createBrowserHistory","RouterStore","registerTopics","test_authentication","stores","syncHistoryWithStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.197966b9.chunk.js","sourcesContent":["import React from \"react\";\nimport { inject, observer } from 'mobx-react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PrivateRoute({ children, userStore, ...rest}) {\n  if (userStore.loading) {\n    return <div>Loading, wait a second...</div>\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        userStore.authed ? (\n          children\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default inject(\"userStore\")(observer(PrivateRoute));\n","import React from \"react\";\nimport axios from \"axios\";\nimport { inject, observer } from \"mobx-react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport \"./index.less\";\n\nconst AppHeader = (props) => {\n  const handleSignOut = () => {\n    axios.get(\"/api/user/logout\").then((res) => {\n      props.userStore.signOut();\n      props.userStore.stompWebsocket.disconnect();\n      props.routingStore.push(\"/login\");\n    });\n  };\n\n  return (\n    <header className=\"modou-app__header\">\n      <Link className=\"logo\" to=\"/\">\n        <span className=\"logo__magic\">magic</span>\n        <span className=\"logo__bean\">bean</span>\n        <span className=\"logo__dot\">.</span>\n        <span className=\"logo__ai\">ai</span>\n      </Link>\n      <div className=\"navbar\">\n        <NavLink activeClassName=\"current\" to=\"/projects\">\n          Predict\n        </NavLink>\n        <NavLink activeClassName=\"current\" to=\"/segments\">\n          Segments\n        </NavLink>\n        <NavLink activeClassName=\"current\" to=\"/feature_sets\">\n          Feature Sets\n        </NavLink>\n        <NavLink activeClassName=\"current\" to=\"/admin\">\n          Admin\n        </NavLink>\n      </div>\n      <div className=\"sign-out\" onClick={handleSignOut}>\n        logout\n      </div>\n      <div className=\"profile\">\n        <Link to=\"/profile\">\n          <img src=\"https://i.pravatar.cc/32?img=58\" alt=\"\" />\n        </Link>\n      </div>\n    </header>\n  );\n};\n\nAppHeader.propTypes = {};\n\nexport default inject(\"userStore\", \"routingStore\")(observer(AppHeader));\n","const CrossValidationInputConfig = {\n  type: \"object\",\n  key: \"crossValidation\",\n  label: \"Cross validation\",\n  properties: [\n    {\n      key: \"folders\",\n      type: \"input\",\n      dataType: \"number\",\n      label: \"Number of folders\",\n      defaultValue: 2,\n    },\n    {\n      key: \"parallelism\",\n      type: \"input\",\n      dataType: \"number\",\n      label: \"Parallelism\",\n      defaultValue: 1,\n    },\n  ],\n};\n\nconst FillDefaultInputConfig = {\n  key: \"fillDefaults\",\n  label: \"FillDefaults Config\",\n  type: \"object\",\n  properties: [\n    {\n      label: \"Default value for number column(s)\",\n      type: \"input\",\n      key: \"number\",\n      dataType: \"number\",\n      placeholder: \"\",\n    },\n    {\n      label: \"Default value for string column(s)\",\n      type: \"input\",\n      key: \"string\",\n      placeholder: \"\",\n    },\n    {\n      label: \"Default value for boolean columns(s)\",\n      type: \"select\",\n      key: \"boolean\",\n      placeholder: \"\",\n      selectOptions: [\n        {\n          key: \"true\",\n          value: true,\n          name: \"true\",\n        },\n        {\n          key: \"false\",\n          value: false,\n          name: \"false\",\n        },\n      ],\n    },\n    {\n      label: \"Default value for timestamp, date column(s)\",\n      type: \"input\",\n      key: \"timestamp\",\n      placeholder: \"\",\n    },\n  ],\n};\n\nconst NODES = {\n  Alignment: {\n    name: \"Alignment\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"align_config\",\n      name: \"Alignment\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Alignment\",\n        before: {},\n        process: {\n          align: {},\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"align\",\n        label: \"Align Config\",\n        type: \"object\",\n        required: true,\n        properties: [\n          {\n            label: \"Main Node\",\n            type: \"select\",\n            optionsSetting: {\n              readFromNodeAttr: \"parent\",\n              transform: \"findNodeById\",\n              valueAttr: \"id\",\n              nameAttr: \"name\",\n            },\n            key: \"mainNode\",\n            placeholder: \"Id of the left mbean\",\n          },\n          {\n            label: \"Granularities\",\n            type: \"multiselect\",\n            selectOptions: [\n              {\n                key: \"hour\",\n                name: \"Hour\",\n              },\n              {\n                key: \"day\",\n                name: \"Day\",\n              },\n              {\n                key: \"week\",\n                name: \"Week\",\n              },\n              {\n                key: \"month\",\n                name: \"Month\",\n              },\n            ],\n            key: \"granularities\",\n            placeholder: \"select at least one granularites\",\n          },\n        ],\n      },\n    ],\n  },\n  Aggregation: {\n    name: \"Aggregation\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"aggregate_node\",\n      name: \"Aggregation\",\n      skip: false,\n      comment: \"Aggregate data\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Aggregation\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"groupBy\",\n        label: \"Group by columns\",\n        placeholder: \"Select at least one column as group by keys\",\n        type: \"array\",\n        required: true,\n        items: {\n          type: \"string\",\n        },\n      },\n      {\n        key: \"agg\",\n        label: \"Agg Config\",\n        type: \"object\",\n        required: true,\n        properties: [\n          {\n            key: \"functions\",\n            type: \"array\",\n            label: \"Aggregate functions\",\n            items: {\n              type: \"AggregateFunction\",\n            },\n          },\n          {\n            key: \"suffix\",\n            type: \"input\",\n            label: \"Suffix\",\n          },\n        ],\n      },\n    ],\n  },\n  BinaryLabel: {\n    name: \"BinaryLabel\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"binary_label\",\n      name: \"BinaryLabel\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"BinaryLabel\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"uuid\",\n        label: \"UUID column\",\n        placeholder: \"select uuid column\",\n        type: \"input\",\n        required: true,\n        dataType: \"string\",\n      },\n      {\n        key: \"timestamp\",\n        label: \"Timestamp column\",\n        placeholder: \"select timestamp column\",\n        type: \"input\",\n        required: true,\n        dataType: \"string\",\n      },\n      {\n        key: \"y\",\n        label: \"Y Label\",\n        placeholder: \"select y label column\",\n        type: \"input\",\n        required: true,\n        dataType: \"string\",\n      },\n    ],\n  },\n  Bucketizer: {\n    name: \"Bucketizer\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"distinct_config\",\n      name: \"Bucketizer\",\n      skip: false,\n      comment: \"load event with both daily and weekly timestamp.\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Bucketizer\",\n        before: {},\n        process: {\n          bucket: {\n            output: \"bucket\",\n          },\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"bucket\",\n        label: \"Bucket Config\",\n        type: \"object\",\n        required: true,\n        properties: [\n          {\n            label: \"Strategy\",\n            type: \"select\",\n            key: \"strategy\",\n            placeholder: \"select bucket strategy\",\n            selectOptions: [\n              {\n                key: \"QuantileDiscretizer\",\n                name: \"Quantile discretizer\",\n              },\n              {\n                key: \"Splitter\",\n                name: \"Splitter\",\n              },\n            ],\n          },\n          {\n            label: \"Nubmer of buckets\",\n            type: \"input\",\n            key: \"num\",\n            placeholder: \"number of buckets\",\n            relatedInfo: {\n              key: \"strategy\",\n              value: \"QuantileDiscretizer\",\n            },\n          },\n          {\n            label: \"Splits\",\n            type: \"array\",\n            key: \"splits\",\n            placeholder: \"array of split\",\n            items: {\n              type: \"number\",\n            },\n            relatedInfo: {\n              key: \"strategy\",\n              value: \"Splitter\",\n            },\n          },\n          {\n            label: \"Key column\",\n            type: \"input\",\n            key: \"key\",\n            placeholder: \"the column used to bucket\",\n          },\n          {\n            label: \"Out\",\n            type: \"input\",\n            key: \"out\",\n            placeholder: \"output column name\",\n            defaultValue: \"bucket\",\n          },\n        ],\n      },\n    ],\n  },\n  LogisticRegression: {\n    name: \"LogisticRegression\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"LogisticRegression\",\n      name: \"LogisticRegression\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"LogisticRegression\",\n        before: {},\n        process: {\n          train: {\n            algoName: \"LR\",\n          },\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"train\",\n        label: \"Logistic regression train config\",\n        type: \"object\",\n        required: true,\n        properties: [\n          {\n            key: \"algoName\",\n            label: \"Algorithm\",\n            type: \"select\",\n            placeholder: \"Select algorithm\",\n            defaultValue: \"LR\",\n            disabled: true,\n            selectOptions: [\n              {\n                key: \"LR\",\n                name: \"LogisticRegression\",\n              },\n              {\n                key: \"GBT\",\n                name: \"GradientBoostingClassifier\",\n              },\n              {\n                key: \"RF\",\n                name: \"RandomForestClassifier\",\n              },\n            ],\n          },\n          {\n            key: \"numericDefault\",\n            label: \"Numeric Default\",\n            type: \"input\",\n            dataType: \"number\",\n            defaultValue: 0,\n            placeholder: \"Default value for numeric column when missing\",\n          },\n          {\n            key: \"categoricalDefault\",\n            label: \"Categorical Default\",\n            type: \"input\",\n            defaultValue: \"\",\n            placeholder: \"Default value for categorical column when missing\",\n          },\n          {\n            key: \"elasticNetParam\",\n            label: \"Elastic net parameter\",\n            type: \"FixedArrayInput\",\n            length: 3,\n            defaultValue: [0.2, 0.5, 0.8],\n            items: {\n              type: \"number\",\n            },\n          },\n          {\n            key: \"regParam\",\n            label: \"Regression parameter\",\n            type: \"FixedArrayInput\",\n            length: 3,\n            defaultValue: [0.01, 0.1, 0.5],\n            items: {\n              type: \"number\",\n            },\n          },\n          {\n            key: \"maxIter\",\n            label: \"Max iteration\",\n            type: \"FixedArrayInput\",\n            length: 3,\n            defaultValue: [50, 100, 200],\n            items: {\n              type: \"number\",\n            },\n          },\n        ],\n      },\n      CrossValidationInputConfig,\n    ],\n  },\n  GradientBoostingClassifier: {\n    name: \"GradientBoostingClassifier\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"GradientBoostingClassifier\",\n      name: \"GradientBoostingClassifier\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"GradientBoostingClassifier\",\n        before: {},\n        process: {\n          train: {\n            algoName: \"GBT\",\n          },\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"train\",\n        label: \"Gradient boosting train config\",\n        type: \"object\",\n        required: true,\n        properties: [\n          {\n            key: \"algoName\",\n            label: \"Algorithm\",\n            type: \"select\",\n            placeholder: \"Select algorithm\",\n            defaultValue: \"GBT\",\n            disabled: true,\n            selectOptions: [\n              {\n                key: \"LR\",\n                name: \"LogisticRegression\",\n              },\n              {\n                key: \"GBT\",\n                name: \"GradientBoostingClassifier\",\n              },\n              {\n                key: \"RF\",\n                name: \"RandomForestClassifier\",\n              },\n            ],\n          },\n          {\n            key: \"numericDefault\",\n            label: \"Numeric Default\",\n            type: \"input\",\n            dataType: \"number\",\n            placeholder: \"Default value for numeric column when missing\",\n          },\n          {\n            key: \"categoricalDefault\",\n            label: \"Categorical Default\",\n            type: \"input\",\n            placeholder: \"Default value for categorical column when missing\",\n          },\n          {\n            key: \"maxBins\",\n            label: \"Max bins\",\n            type: \"FixedArrayInput\",\n            length: 3,\n            defaultValue: [16, 32, 64],\n            items: {\n              type: \"number\",\n            },\n          },\n          {\n            key: \"maxDepth\",\n            label: \"Max depth\",\n            type: \"FixedArrayInput\",\n            length: 3,\n            defaultValue: [3, 5, 7],\n            items: {\n              type: \"number\",\n            },\n          },\n          {\n            key: \"maxIter\",\n            label: \"Max iteration\",\n            type: \"FixedArrayInput\",\n            length: 3,\n            defaultValue: [50, 100, 200],\n            items: {\n              type: \"number\",\n            },\n          },\n        ],\n      },\n      CrossValidationInputConfig,\n    ],\n  },\n  RandomForestClassifier: {\n    name: \"RandomForestClassifier\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"RandomForestClassifier\",\n      name: \"RandomForestClassifier\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"RandomForestClassifier\",\n        before: {},\n        process: {\n          train: {\n            algoName: \"RF\",\n          },\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"train\",\n        label: \"Random forest classifier train config\",\n        type: \"object\",\n        required: true,\n        properties: [\n          {\n            key: \"algoName\",\n            label: \"Algorithm\",\n            type: \"select\",\n            placeholder: \"Select algorithm\",\n            defaultValue: \"RF\",\n            disabled: true,\n            selectOptions: [\n              {\n                key: \"LR\",\n                name: \"LogisticRegression\",\n              },\n              {\n                key: \"GBT\",\n                name: \"GradientBoostingClassifier\",\n              },\n              {\n                key: \"RF\",\n                name: \"RandomForestClassifier\",\n              },\n            ],\n          },\n          {\n            key: \"numericDefault\",\n            label: \"Numeric Default\",\n            type: \"input\",\n            dataType: \"number\",\n            placeholder: \"Default value for numeric column when missing\",\n          },\n          {\n            key: \"categoricalDefault\",\n            label: \"Categorical Default\",\n            type: \"input\",\n            placeholder: \"Default value for categorical column when missing\",\n          },\n          {\n            key: \"maxBins\",\n            label: \"Max bins\",\n            type: \"FixedArrayInput\",\n            length: 3,\n            defaultValue: [16, 32, 64],\n            items: {\n              type: \"number\",\n            },\n          },\n          {\n            key: \"maxDepth\",\n            label: \"Max depth\",\n            type: \"FixedArrayInput\",\n            length: 3,\n            defaultValue: [5, 7, 9],\n            items: {\n              type: \"number\",\n            },\n          },\n          {\n            key: \"maxIter\",\n            label: \"Max iteration\",\n            type: \"FixedArrayInput\",\n            length: 3,\n            defaultValue: [40, 80, 160],\n            items: {\n              type: \"number\",\n            },\n          },\n        ],\n      },\n      CrossValidationInputConfig,\n    ],\n  },\n  NaFiller: {\n    name: \"NaFiller\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"fill_defaults_config\",\n      name: \"NaFiller\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"NaFiller\",\n        before: {},\n        process: {\n          fillDefaults: {},\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [{...FillDefaultInputConfig, required: true}],\n  },\n  Distinct: {\n    name: \"Distinct\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"distinct_config\",\n      name: \"Distinct\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Distinct\",\n        before: {},\n        process: {\n          distinct: [],\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"distinct\",\n        label: \"Distinct columns\",\n        type: \"array\",\n        required: true,\n        placeholder: \"distinct columns\",\n        items: {\n          type: \"string\",\n        },\n      },\n    ],\n  },\n  DynamicColumnSelector: {\n    name: \"DynamicColumnSelector\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"DynamicColumnSelector\",\n      name: \"DynamicColumnSelector\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"DynamicColumnSelector\",\n        before: {},\n        process: {\n          dynamicColumnSelector: {},\n          fillDefaults: {},\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"dynamicColumnSelector\",\n        label: \"Dymanic column selector config\",\n        type: \"object\",\n        required: true,\n        properties: [\n          {\n            key: \"selectorNodeId\",\n            type: \"input\",\n            dataType: \"string\",\n            label: \"Id of the selector node\",\n          },\n          {\n            key: \"nameField\",\n            type: \"input\",\n            dataType: \"string\",\n            label: \"Name column\",\n          },\n          {\n            key: \"dataTypeField\",\n            type: \"input\",\n            dataType: \"string\",\n            label: \"Data type column name\",\n          },\n          {\n            key: \"keep\",\n            type: \"array\",\n            label: \"Name column\",\n            items: {\n              type: \"string\",\n            },\n            label: \"Columns to keep\",\n          },\n        ],\n      },\n      FillDefaultInputConfig,\n    ],\n  },\n  Explode: {\n    name: \"Explode\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"Explode\",\n      name: \"Explode\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Explode\",\n        before: {},\n        process: {\n          explode: {},\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"explode\",\n        type: \"object\",\n        required: true,\n        label: \"Explode\",\n        properties: [\n          {\n            key: \"col\",\n            type: \"input\",\n            dataType: \"string\",\n            label: \"Column to explode\",\n            placeholder: \"\",\n          },\n          {\n            key: \"rename\",\n            type: \"input\",\n            dataType: \"string\",\n            label: \"Rename column to\",\n            placeholder: \"\",\n          },\n          {\n            key: \"pos\",\n            type: \"select\",\n            label: \"With position\",\n            placeholder: \"with position or not\",\n            selectOptions: [\n              {\n                key: \"true\",\n                value: true,\n                name: \"true\",\n              },\n              {\n                key: \"false\",\n                value: false,\n                name: \"false\",\n              },\n            ],\n          },\n          {\n            key: \"outer\",\n            type: \"select\",\n            label: \"Outer\",\n            placeholder: \"Create new row(s) or not\",\n            selectOptions: [\n              {\n                key: \"true\",\n                value: true,\n                name: \"true\",\n              },\n              {\n                key: \"false\",\n                value: false,\n                name: \"false\",\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  FeaturePreselector: {\n    name: \"FeaturePreselector\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"FeaturePreselector\",\n      name: \"FeaturePreselector\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"FeaturePreselector\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"sampleRatio\",\n        label: \"Sample ratio\",\n        type: \"input\",\n        required: true,\n        dataType: \"number\",\n        defaultValue: 1.0,\n      },\n      {\n        key: \"quantile\",\n        label: \"Quantile\",\n        type: \"input\",\n        dataType: \"number\",\n        defaultValue: 10,\n      },\n      {\n        key: \"maxLevel\",\n        label: \"Max level\",\n        type: \"input\",\n        dataType: \"number\",\n        defaultValue: 20,\n      },\n    ],\n  },\n  Pivot: {\n    name: \"Pivot\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"Pivot\",\n      name: \"Pivot\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Pivot\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"pivot\",\n        type: \"object\",\n        required: true,\n        label: \"Pivot config\",\n        properties: [\n          {\n            key: \"key\",\n            type: \"input\",\n            label: \"Pivot key column\",\n          },\n          {\n            key: \"value\",\n            type: \"input\",\n            label: \"Pivot value column\",\n          },\n          {\n            key: \"top\",\n            type: \"input\",\n            label: \"Top\",\n            dataType: \"number\",\n          },\n          {\n            key: \"suffix\",\n            type: \"input\",\n            label: \"Suffix\",\n          },\n        ],\n      },\n    ],\n  },\n  RandomSample: {\n    name: \"RandomSample\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"RandomSample\",\n      name: \"RandomSample\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"RandomSample\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"sampleRatio\",\n        label: \"Sample ratio\",\n        placeholder: \"\",\n        type: \"input\",\n        required: true,\n        dataType: \"number\",\n        defaultValue: 1.0,\n      },\n    ],\n  },\n  Sharding: {\n    name: \"Sharding\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"Sharding\",\n      name: \"Sharding\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Sharding\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"primaryKey\",\n        label: \"Primary keys\",\n        placeholder: \"\",\n        type: \"array\",\n        required: true,\n        items: {\n          type: \"string\",\n        },\n      },\n      {\n        key: \"shardingMaxColumns\",\n        label: \"The max count of columns per shard\",\n        placeholder: \"\",\n        type: \"input\",\n        dataType: \"number\",\n        defaultValue: 50,\n      },\n    ],\n  },\n  Union: {\n    name: \"Union\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"Union\",\n      name: \"Union\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Union\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"union\",\n        label: \"Union type\",\n        type: \"select\",\n        required: true,\n        placeholder: \"select union type\",\n        selectOptions: [\n          {\n            key: \"unionAll\",\n            name: \"Union All\",\n          },\n          {\n            key: \"union\",\n            name: \"Union\",\n          },\n          {\n            key: \"unionByName\",\n            name: \"Union by Name\",\n          },\n        ],\n      },\n    ],\n  },\n  SplitTrainAndTest: {\n    name: \"SplitTrainAndTest\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"SplitTrainAndTest\",\n      name: \"SplitTrainAndTest\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"SplitTrainAndTest\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"trainRatio\",\n        type: \"input\",\n        required: true,\n        label: \"Train ratio\",\n        dataType: \"number\",\n        placeholder: \"(0.0, 1.0)\",\n        min: 0,\n        max: 1,\n      },\n    ],\n  },\n  Merge: {\n    name: \"Merge\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"Merge\",\n      name: \"Merge\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Merge\",\n        before: {},\n        process: {\n          mergeBy: {},\n        },\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [\n      {\n        key: \"mergeBy\",\n        type: \"object\",\n        required: true,\n        label: \"Merge by config\",\n        properties: [\n          {\n            key: \"mainNode\",\n            type: \"input\",\n            dataType: \"string\",\n            label: \"Main node id\",\n          },\n          {\n            key: \"name\",\n            type: \"input\",\n            dataType: \"string\",\n            label: \"Output MBean name\",\n            placeholder: \"name of the output mbean\",\n          },\n          {\n            key: \"joinType\",\n            type: \"select\",\n            label: \"Join type\",\n            selectOptions: [\n              {\n                key: \"inner\",\n                name: \"Inner\",\n              },\n              {\n                key: \"left\",\n                name: \"Left\",\n              },\n              {\n                key: \"right\",\n                name: \"Right\",\n              },\n              {\n                key: \"fullouter\",\n                name: \"Full Outer\",\n              },\n            ],\n          },\n          {\n            key: \"keys\",\n            type: \"array\",\n            items: {\n              type: \"string\",\n            },\n            label: \"using columns\",\n            placeholder: \"columns used to join\",\n          },\n          {\n            key: \"exprs\",\n            type: \"array\",\n            items: {\n              type: \"ConditionGroup\"\n            },\n            label: \"Join Expressions\"\n          }\n        ],\n      },\n    ],\n  },\n  MBeanLoader: {\n    name: \"MBeanLoader\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"MBeanLoader\",\n      name: \"MBeanLoader\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"MBeanLoader\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [],\n  },\n  Standardizier: {\n    name: \"Standardizier\",\n    iconClassName: \"icondatabase\",\n    defaultTemplate: {\n      id: \"Standardizier\",\n      name: \"Standardizier\",\n      skip: false,\n      comment: \"\",\n      accept: [\"feature\"],\n      transformer: {\n        className: \"Standardizier\",\n        before: {},\n        process: {},\n        after: {},\n      },\n      parent: [],\n      persistent: {},\n    },\n    inputFormConfig: [],\n  },\n};\n\nexport default NODES;\n","import mx from 'mxgraph';\nimport { v1 as uuidv1 } from 'uuid';\n\nconst { mxObjectCodec, mxUtils, mxClient, mxEvent, mxGraph, mxRubberband, mxConstants, mxPerimeter, mxEdgeStyle, mxToolbar, mxCell, mxGeometry, mxKeyHandler } = mx();\n\nexport class MxGraph2Json extends mxObjectCodec {\n  constructor() {\n    super( (value) => {} );\n  }\n\n  encode(value) {\n    const xmlDoc = mxUtils.createXmlDocument();\n    const newObject = xmlDoc.createElement(\"Object\");\n    for(let prop in value) {\n      newObject.setAttribute(prop, value[prop]);\n    }\n    return newObject;\n  }\n\n  decode(model) {\n    return Object.keys(model.cells).map(\n      (iCell)=>{\n        const currentCell = model.getCell(iCell);\n        return (currentCell.value !== undefined)? currentCell : null;\n      }\n    ).filter((item)=> (item !== null));\n  }\n}\n\nexport class GraphX {\n  constructor(container, toolbar, addNewNode, updateLayouts, connectNodes, selectNode, removeNodes){\n    if (!mxClient.isBrowserSupported()) {\n      return mxUtils.error('Browser is not supported!', 200, false);\n    }\n    mxEvent.disableContextMenu(container);\n\n    this._graph = new mxGraph(container);\n    this._graph.setConnectable(true);\n    this._graph.setAllowDanglingEdges(false);\n    // new mxRubberband(this._graph); // Enables rubberband selection\n\n    this.onDroppedCallback = (key, id, name) => {\n      addNewNode(key, id, name);\n      updateLayouts(this.getJsonModel());\n    };\n    this.onConnected = (sourceId, targetId) => {\n      connectNodes(sourceId, targetId);\n      updateLayouts(this.getJsonModel());\n    }\n    this.onSelectNode = selectNode;\n    this.onCellsRemoved = (cells) => {\n      const cellIds = cells.map((cell) => cell.id);\n\n      removeNodes(cells);\n      updateLayouts(this.getJsonModel().filter((cell) => cellIds.indexOf(cell.id) < 0));\n    }\n    this._toolbar = new mxToolbar(toolbar);\n    this._toolbar.enabled = false;\n\n    this._initToolbar();\n    this._initConnectionHandler();\n    this._initSelectionCellsHandler();\n    this._initCellsRemovedHandler();\n    this._initDeleteKeyHandler();\n\n    this.labelDisplayOveride();\n    this.styling();\n  }\n\n  labelDisplayOveride() { // Overrides method to provide a cell label in the display\n    this._graph.convertValueToString = (cell)=> {\n      if (mxUtils.isNode(cell.value)) {\n        if (cell.value.nodeName.toLowerCase() === 'object') {\n          const name = cell.getAttribute('name', '');\n          return name;\n        }\n      }\n\n      if (cell.isVertex()) {\n        if (!!cell.value) {\n          return cell.value.name || cell.value;\n        }\n      }\n      return '';\n    };\n  }\n\n  styling() {\n    // Creates the default style for vertices\n    let style = [];\n    style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n    style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n    style[mxConstants.STYLE_STROKECOLOR] = 'gray';\n    style[mxConstants.STYLE_ROUNDED] = true;\n    style[mxConstants.STYLE_FILLCOLOR] = '#EEEEEE';\n    style[mxConstants.STYLE_GRADIENTCOLOR] = 'white';\n    style[mxConstants.STYLE_FONTCOLOR] = 'black';\n    style[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n    style[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n    style[mxConstants.STYLE_FONTSIZE] = '12';\n    style[mxConstants.STYLE_FONTSTYLE] = 1;\n    this._graph.getStylesheet().putDefaultVertexStyle(style);\n\n    // Creates the default style for edges\n    style = this._graph.getStylesheet().getDefaultEdgeStyle();\n    style[mxConstants.STYLE_STROKECOLOR] = '#0C0C0C';\n    style[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR] = 'white';\n    style[mxConstants.STYLE_EDGE] = mxEdgeStyle.ElbowConnector;\n    style[mxConstants.STYLE_ROUNDED] = true;\n    style[mxConstants.STYLE_FONTCOLOR] = 'black';\n    style[mxConstants.STYLE_FONTSIZE] = '10';\n    this._graph.getStylesheet().putDefaultEdgeStyle(style);\n  }\n\n  getJsonModel(){\n    const encoder = new MxGraph2Json();\n    const jsonModel = encoder.decode(this._graph.getModel());\n    return jsonModel;\n  }\n\n  render(dataModel) {\n    // clear the old graph first.\n    this._graph.getModel().clear();\n\n    const jsonEncoder = new MxGraph2Json();\n\n    this._vertices = {};\n    this._dataModel = dataModel;\n\n    const parent = this._graph.getDefaultParent();\n    this._graph.getModel().beginUpdate(); // Adds cells to the model in a single step\n    try {\n\n      [\n        ...this._dataModel.layouts.filter((c) => !c.edge),\n        ...this._dataModel.layouts.filter((c) => !!c.edge)\n      ].map(\n        (node)=> {\n          if(node.value) {\n            if(typeof node.value === \"object\" || !!node.vertex) {\n              // const xmlNode = jsonEncoder.encode(node.value);\n              let vertex = this._graph.insertVertex(parent, null, node.value, node.geometry.x, node.geometry.y, node.geometry.width, node.geometry.height);\n              vertex.setId(node.id);\n              vertex.setValue(node.value);\n              this._vertices[node.id] = vertex;\n            } else if(node.value === \"Edge\") {\n              let vertex = this._graph.insertEdge(parent, null, 'Edge', this._vertices[node.source], this._vertices[node.target])\n              vertex.setId(node.id);\n              this._vertices[node.id] = vertex;\n            }\n          }\n        }\n      );\n\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this._graph.getModel().endUpdate(); // Updates the display\n    }\n  }\n\n  addVertex(node, icon, w, h, style) {\n    let vertex = new mxCell(null, new mxGeometry(0, 0, w, h), style);\n    vertex.setVertex(true);\n\n    let img = this._addToolbarItem(this._graph, toolbar, node, vertex, icon, this.onDroppedCallback);\n    img.enabled = true;\n\n    this._graph.getSelectionModel().addListener(mxEvent.CHANGE, (evt) => {\n      let tmp = this._graph.isSelectionEmpty();\n      mxUtils.setOpacity(img, (tmp) ? 100 : 20);\n      img.enabled = tmp;\n\n      if (!!tmp) {\n        this.onSelectNode(null);\n      }\n    });\n  }\n\n  _initToolbar() {\n    document.querySelectorAll(\".nodes-list-bar__nodes-list--node\").forEach((node) => {\n      this.addVertex(node, 'editors/images/rounded.gif', 100, 40, 'shape=rounded');\n    });\n  }\n\n  _addToolbarItem(graph, toolbar, node, prototype, image, onDroppedCallback) {\n    // Function that is executed when the image is dropped on\n    // the graph. The cell argument points to the cell under\n    // the mousepointer if there is one.\n    let onDropped = function(graph, evt, cell, x, y) {\n      graph.stopEditing(false);\n\n      let vertex = graph.getModel().cloneCell(prototype);\n      vertex.geometry.x = x;\n      vertex.geometry.y = y;\n\n      let name = this.element.getAttribute(\"data-node-name\");\n      let key = this.element.getAttribute(\"data-node-key\");\n      // const jsonEncoder = new MxGraph2Json();\n      // vertex.setValue(jsonEncoder.encode({name: name}));\n      vertex.setValue({ name });\n      vertex.setId(uuidv1());\n      vertex.setAttribute(\"type\", key);\n\n      graph.addCell(vertex);\n      graph.setSelectionCell(vertex);\n      onDroppedCallback(key, vertex.id, name);\n    };\n\n    // This listener is always called first before any other listener\n    // in all browsers.\n    mxEvent.addListener(node, 'mousedown', function(evt) {\n      if (node.enabled == false)\n        {\n          mxEvent.consume(evt);\n        }\n    });\n\n    mxUtils.makeDraggable(node, graph, onDropped);\n\n    return node;\n  }\n\n  _initConnectionHandler() {\n    this._graph.connectionHandler.addListener(mxEvent.CONNECT, (sender, evt) => {\n      let edge = evt.getProperty('cell');\n      let source = this._graph.getModel().getTerminal(edge, true);\n      let target = this._graph.getModel().getTerminal(edge, false);\n      edge.setId(uuidv1());\n      edge.setValue(\"Edge\");\n\n      this.onConnected(source.id, target.id);\n    });\n  }\n\n  _initSelectionCellsHandler() {\n    this._graph.selectionCellsHandler.addListener(mxEvent.ADD, (sender, evt) => {\n      let selectedCells = sender.getHandledSelectionCells();\n      let cell = selectedCells[0];\n      if (cell.isEdge()) {\n        return;\n      }\n      this.onSelectNode(cell.id);\n    });\n  }\n\n  _initCellsRemovedHandler() {\n    const originCellsRemoved = this._graph.cellsRemoved.bind(this._graph);\n    this._graph.cellsRemoved = (cells) => {\n      this.onCellsRemoved(cells);\n      originCellsRemoved(cells);\n    }\n  }\n\n  _initDeleteKeyHandler() {\n    const keyHandler = new mxKeyHandler(this._graph);\n    keyHandler.bindKey(46, (evt) => {\n      if (this._graph.isEnabled())\n        {\n          this._graph.removeCells();\n        }\n    });\n    keyHandler.bindKey(8, (evt) => {\n      if (this._graph.isEnabled())\n        {\n          this._graph.removeCells();\n        }\n    });\n  }\n}\n\n// /******************************************************************\n//   Demo\n//  ******************************************************************/\n\n// const graphX = new GraphX(document.getElementById('graphContainer'));\n\n// document.getElementById('buttons').appendChild(mxUtils.button('From JSON', () => {\n//   const dataModel = JSON.parse(document.getElementById('from').innerHTML);\n//   graphX.render(dataModel);\n// }));\n\n// document.getElementById('buttons').appendChild(mxUtils.button('To JSON', () => {\n//   const jsonNodes = graphX.getJsonModel();\n//   document.getElementById('to').innerHTML = `<pre>${syntaxHighlight(stringifyWithoutCircular(jsonNodes))}</pre>`;\n// }));\n\n\n// /******************************************\n//   Utils\n//  ********************************************/\n\nexport function stringifyWithoutCircular(json){\n  return JSON.stringify(\n    json,\n    ( key, value) => {\n      if((key === 'parent' || key == 'source' || key == 'target') && value !== null) {\n        return value.id;\n      } else if(key === 'value' && value !== null && value.localName) {\n        let results = {};\n        Object.keys(value.attributes).forEach(\n          (attrKey)=>{\n            const attribute = value.attributes[attrKey];\n            results[attribute.nodeName] = attribute.nodeValue;\n          }\n        )\n        return results;\n      }\n      return value;\n    }, 4\n  );\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.less';\n\nexport default class AlertBar extends Component {\n  render() {\n    let { title, desc, type } = this.props;\n\n    return (\n      <div className='alert-bar'>\n        <div className='alert-bar__indicator'>\n          <div className='alert-bar__indicator--status-bar' />\n          <div className={`alert-bar__icon-block ${type}`} />\n        </div>\n\n        <div className='alert-bar__main'>\n          <div className={`alert-bar__main--title ${type}`}>{ title }</div>\n          <div className='alert-bar__main--desc'>{ desc }</div>\n        </div>\n\n        <div className='alert-bar__icon-block btn'>\n          <i className='iconfont iconremove' />\n        </div>\n      </div>\n    );\n  }\n};\n\nAlertBar.propTypes = {\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string,\n  type: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AlertBar from \"../AlertBar\";\nimport \"./index.less\";\n\nclass Workflow extends Component {\n  render() {\n    const { currentProject, layouts, editProjectDetail } = this.props;\n\n    return (\n      <div className=\"workflow\">\n        <div className=\"workflow__header\">\n          <div className=\"workflow__header--left-block\">\n            <div className=\"workflow__header--project-name\" onClick={ () => editProjectDetail(true) }>{ currentProject.project && currentProject.project.name }</div>\n          </div>\n\n          <div className=\"workflow__header--right-block\">\n            <div className=\"workflow__header--btn-group disabled\">Train</div>\n          </div>\n        </div>\n\n        <div className=\"workflow__alert-bar\">\n          <AlertBar\n            title=\"Project created\"\n            desc=\"To start creating your workflow, drag and drop any of the objects from the workflow toolbox.\"\n            type=\"succeed\"\n          />\n        </div>\n\n        <div className=\"workflow__container with-alert\">\n          {layouts.length > 0 ? null : (\n            <div className=\"workflow__container-placeholder\">\n              <div className=\"workflow__container-placeholder--title\">\n                Start workflow\n              </div>\n              <div className=\"workflow__container-placeholder--desc\">\n                Drag and drop the nodes from the toolbox and start your\n                predictive pipleine\n              </div>\n            </div>\n          )}\n\n          <div id=\"workflow-canvas\" className=\"workflow__container--canvas\" />\n\n          <div className=\"workflow__container--toolbar\">\n            <div className=\"workflow__container--toolbar-item\">\n              <i className=\"iconfont iconzoomout\" />\n            </div>\n\n            <div className=\"workflow__container--toolbar-item\">\n              <i className=\"iconfont iconzoomin\" />\n            </div>\n\n            <div\n              className=\"workflow__container--toolbar-item\"\n              onClick={this.props.showModal}\n            >\n              <i className=\"iconfont iconupload\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nWorkflow.propTypes = {\n  connectNodes: PropTypes.func.isRequired,\n  selectNode: PropTypes.func.isRequired,\n  addNewNode: PropTypes.func.isRequired,\n  removeNodes: PropTypes.func.isRequired,\n  updateLayouts: PropTypes.func.isRequired,\n  layouts: PropTypes.array.isRequired,\n  showModal: PropTypes.func.isRequired,\n  currentProject: PropTypes.object.isRequired,\n};\n\nexport default Workflow;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport NODES from \"../../constants/Nodes\";\nimport { omitBy } from \"lodash\";\nimport { Input } from \"antd\";\nimport PropTypes from \"prop-types\";\n\nimport \"./index.less\";\n\nconst NodeListBar = (props) => {\n  const [nodes, setNodes] = useState(props.nodes);\n\n  // make react useEffect hook not run on initial render\n  // https://stackoverflow.com/questions/53253940/make-react-useeffect-hook-not-run-on-initial-render\n  const firstUpdate = useRef(true);\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n    } else {\n      window[props.graphxUUID]._initToolbar();\n    }\n  }, [nodes]);\n\n  const handleKeywordChange = (event) => {\n    const keyword = event.target.value;\n    if (keyword) {\n      const matchedNodes = omitBy(NODES, (node) => {\n        return !node.name.toLowerCase().includes(keyword);\n      });\n      setNodes(matchedNodes);\n    } else {\n      setNodes(NODES);\n    }\n  };\n\n  return (\n    <div className={`nodes-list-bar ${props.isShowing ? \"\" : \"hidden\"}`}>\n      <div className=\"nodes-list-bar__header\">Add node</div>\n\n      <div className=\"nodes-list-bar__nodes-list\">\n        <div className=\"nodes-list-bar__nodes-list--title\">Toolbox</div>\n\n        <div className=\"nodes-list-bar__nodes-list--desc\">\n          To start creating your worklow, drag and drop objects from box below\n        </div>\n        <div className=\"nodes-list-bar__nodes-list--search\">\n          <Input placeholder=\"Search node\" onChange={handleKeywordChange} />\n        </div>\n\n        <div\n          id=\"workflow-toolbar\"\n          className=\"nodes-list-bar__nodes-list--nodes-block\"\n        >\n          {Object.keys(nodes).map((key) => (\n            <div\n              className=\"nodes-list-bar__nodes-list--node\"\n              data-node-key={key}\n              data-node-name={nodes[key].name}\n              key={nodes[key].name}\n            >\n              <i className={`iconfont ${nodes[key].iconClassName}`} />\n\n              <div className=\"nodes-list-bar__nodes-list--node-info\">\n                <div className=\"nodes-list-bar__nodes-list--node-info-title\">\n                  {nodes[key].name}\n                </div>\n                <div className=\"nodes-list-bar__nodes-list--node-info-desc\">\n                  {nodes[key].description}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nNodeListBar.propTypes = {\n  isShowing: PropTypes.bool.isRequired,\n};\n\nexport default NodeListBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeObservable, observable, action } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { Select, Input } from \"antd\";\n\nimport \"./index.less\";\n\nconst SelectOption = Select.Option;\n\n@observer\nclass NodeDetailsPanel extends Component {\n  @observable isCollapsed = false;\n\n  constructor() {\n    super();\n    makeObservable(this);\n  }\n\n  render() {\n    let { node } = this.props;\n\n    // TODO: fetch feature sets through API\n    const featureSets = [\n      { id: \"1\", name: \"events\"},\n      { id: \"2\", name: \"user_props\"}\n    ]\n\n    return (\n      <div\n        className={`node-details-panel ${this.isCollapsed ? \"collapsed\" : \"\"}`}\n      >\n        <div className=\"node-details-panel__header\">\n          <div className=\"node-details-panel__header--node-icon\">\n            <i className=\"iconfont icondatabase\" />\n          </div>\n\n          <div className=\"node-details-panel__header--node-info\">\n            <div className=\"node-details-panel__header--node-name\">\n              {node.name}\n            </div>\n            <div className=\"node-details-panel__header--node-type\">\n              {node.transformer[\"class\"]}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"node-details-panel__breif-info\">\n          <div className=\"node-details-panel__parent-info\">\n            <span className=\"node-details-panel__parent-info--label\">\n              Parent:\n            </span>\n            <span className=\"node-details-panel__parent-info--parents\">\n              {(node.parent || []).join(\", \")}\n            </span>\n          </div>\n\n          <div className=\"node-details-panel__desc\">{node.comment}</div>\n\n          <div className=\"node-details-panel__running-btn\">Run this node</div>\n\n          <div className=\"node-details-panel__check-box\">\n            <input\n              type=\"checkbox\"\n              id=\"skip\"\n              checked={node.skip}\n              onChange={this.changeSetting(\"skip\")}\n            />\n            <label htmlFor=\"skip\">Skip this node from running</label>\n          </div>\n\n          <div className=\"node-details-panel__check-box\">\n            <input\n              type=\"checkbox\"\n              id=\"persistent\"\n              checked={node.persistent}\n              onChange={this.changeSetting(\"persistent\")}\n            />\n            <label htmlFor=\"persistent\">Persistent</label>\n          </div>\n\n          <div className=\"node-details-panel__accept\">\n            <div>Accept MBean types</div>\n            <Select\n              className=\"accept-input\"\n              mode=\"tags\"\n              value={node.accept}\n              onChange={this.changeSetting(\"accept\")}\n            ></Select>\n          </div>\n\n          {node.transformer.className === \"MBeanLoader\" ? (\n            <div className=\"node-details-panel__mbean\">\n              <div>MBean</div>\n              <Select className='mbean-select' placeholder=\"select a feature set\">\n                { this._renderFeatureSetOptions(featureSets)}\n              </Select>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n\n  @action\n  toggleCollapse = () => {\n    this.isCollapsed = !this.isCollapsed;\n  };\n\n  changeSetting = (key) => (eventOrValue) => {\n    if (key === \"skip\" || key === \"persistent\") {\n      this.props.updateNodeDetailSetting(key, eventOrValue.target.checked);\n    } else if (key === \"accept\") {\n      this.props.updateNodeDetailSetting(key, eventOrValue);\n    }\n  };\n\n  _renderFeatureSetOptions = (featureSets) => {\n    return featureSets.map((featureSet, i) => (\n      <SelectOption key={i} value={featureSet.id}>{featureSet.name}</SelectOption>\n    ))\n  }\n}\n\nNodeDetailsPanel.propTypes = {\n  node: PropTypes.object.isRequired,\n  updateNodeDetailSetting: PropTypes.func.isRequired,\n};\n\nexport default NodeDetailsPanel;\n","export const safeAssign = (stageConfig, groupKey, propertyKey, value) => {\n  if (!propertyKey) {\n    return {\n      ...stageConfig,\n      [groupKey]: value,\n    };\n  }\n\n  // if group key exists\n  if (stageConfig[groupKey]) {\n    return {\n      ...stageConfig,\n      [groupKey]: {\n        ...stageConfig[groupKey],\n        [propertyKey]: value,\n      },\n    };\n  }\n\n  // group key does not exists\n  return {\n    ...stageConfig,\n    [groupKey]: {\n      [propertyKey]: value,\n    },\n  };\n};\n\nexport const safeGet = (config, groupKey, propertyKey) => {\n  const groupValue = config[groupKey];\n  if (typeof groupValue === \"object\" && groupValue !== null) {\n    return groupValue[propertyKey];\n  }\n\n  return undefined;\n};\n\nexport const trimStartDollarSign = (columnName) => {\n  if (columnName.startsWith(\"$\")) {\n    return columnName.split(\"$\")[1];\n  }\n  return columnName;\n};\n\nexport const getAuthStatusFromLocalStorage = () => {\n  const authStatus = localStorage.getItem(\"authed\");\n  if (authStatus) {\n    return JSON.parse(authStatus);\n  }\n\n  return false;\n};\n\n/**\n * \n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * Copied from [phoenix.js](https://github.com/phoenixframework/phoenix/blob/master/assets/js/phoenix.js)\n * \n * @example\n * let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *   return [1000, 5000, 10000][tries - 1] || 10000\n * })\n * reconnectTimer.scheduleTimeout() // fires after 1000\n * reconnectTimer.scheduleTimeout() // fires after 5000\n * reconnectTimer.reset()\n * reconnectTimer.scheduleTimeout() // fires after 1000\n *\n * @param {Function} callback\n * @param {Function} timerCalc\n */\n export class Timer {\n  constructor(callback, timerCalc){\n    this.callback  = callback\n    this.timerCalc = timerCalc\n    this.timer     = null\n    this.tries     = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { UpCircleOutlined, DownCircleOutlined } from \"@ant-design/icons\";\n\nconst Input = (props) => {\n  const { groupKey, group, property, onValueChange, value } = props;\n  const [collapsed, setCollapsed] = useState(group && !group.required);\n\n  const toggleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n  // if property and groupKey are defined, we are going to update the property under the group\n  if (property && groupKey) {\n    return (\n      <div className=\"config-group__setting-block\">\n        <div className=\"setting-label\">{property.label}</div>\n\n        <div className=\"setting-input-block\">\n          <input\n            className=\"setting-input\"\n            type={property.dataType}\n            min={property.min}\n            max={property.max}\n            placeholder={property.placeholder}\n            onChange={onValueChange(groupKey, property.key)}\n            value={value}\n            defaultValue={property.defaultValue}\n          />\n          <i className=\"edit-icon iconfont iconpencil\" />\n        </div>\n      </div>\n    );\n  }\n\n  // otherwise we are going to up the group directly\n  return (\n    <div className=\"config-group__setting-block\">\n      <div className=\"setting-label\">\n        <div className=\"setting-label__caption\">{group.label}</div>\n        <div className=\"setting-label__toggle\" onClick={toggleCollapse}>\n          {collapsed ? <DownCircleOutlined /> : <UpCircleOutlined />}\n        </div>\n      </div>\n\n      {collapsed ? null : (\n        <div className=\"setting-input-block\">\n          <input\n            className=\"setting-input\"\n            type={group.dataType}\n            min={group.min}\n            max={group.max}\n            placeholder={group.placeholder}\n            value={value}\n            onChange={onValueChange(group.key)}\n            defaultValue={group.defaultValue}\n          />\n          <i className=\"edit-icon iconfont iconpencil\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nInput.propTypes = {\n  groupKey: PropTypes.string,\n  group: PropTypes.object,\n  property: PropTypes.object,\n  onValueChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Select } from \"antd\";\nimport { UpCircleOutlined, DownCircleOutlined } from \"@ant-design/icons\";\n\nconst ArrayInput = ({ group, property, onValueChange, value }) => {\n  const [collapsed, setCollapsed] = useState(group && !group.required);\n  const toggleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n  if (property) {\n    return (\n      <div className=\"config-group__setting-block\">\n        <div className=\"setting-label\">{property.label}</div>\n\n        <div className=\"setting-input-block\">\n          <Select\n            mode=\"tags\"\n            style={{ width: \"100%\" }}\n            placeholder={property.placeholder}\n            value={value}\n            onChange={onValueChange(group.key, property.key)}\n          ></Select>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"config-group__setting-block\">\n      <div className=\"setting-label\">\n        <div className=\"setting-label__caption\">{group.label}</div>\n        <div className=\"setting-label__toggle\" onClick={toggleCollapse}>\n          {collapsed ? <DownCircleOutlined /> : <UpCircleOutlined />}\n        </div>\n      </div>\n\n      {collapsed ? null : (\n        <div className=\"setting-input-block\">\n          <Select\n            mode=\"tags\"\n            style={{ width: \"100%\" }}\n            placeholder={group.placeholder}\n            value={value}\n            onChange={onValueChange(group.key)}\n          ></Select>\n        </div>\n      )}\n    </div>\n  );\n};\n\nArrayInput.propTypes = {\n  group: PropTypes.object.isRequired,\n  property: PropTypes.object,\n  onValueChange: PropTypes.func.isRequired,\n};\n\nexport default ArrayInput;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dropdown, Menu } from \"antd\";\nimport { UpCircleOutlined, DownCircleOutlined } from \"@ant-design/icons\";\n\nconst Select = (props) => {\n  const { groupKey, property, onValueChange, node, group } = props;\n  const [collapsed, setCollapsed] = useState(group && !group.required);\n  const toggleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const generateSubmenus = (property, node) => {\n    let sourceData = [];\n\n    if (!!property.selectOptions) {\n      sourceData = property.selectOptions;\n      return sourceData.map((option) => (\n        <Menu.Item key={option.key} value={option.value}>\n          {option.name}\n        </Menu.Item>\n      ));\n    }\n\n    if (\n      !!property.optionsSetting &&\n      !!property.optionsSetting.readFromNodeAttr\n    ) {\n      sourceData = node[property.optionsSetting.readFromNodeAttr];\n\n      if (!!property.optionsSetting.transform) {\n        // ???\n        sourceData = sourceData.map((n) =>\n          props[property.optionsSetting.transform](n)\n        );\n      }\n    }\n\n    return sourceData.map((n, i) => (\n      <Menu.Item key={n[property.optionsSetting.keyAttr]}>\n        {n[property.optionsSetting.displayAttr]}\n      </Menu.Item>\n    ));\n  };\n\n  // render group\n  if (group) {\n    const menus = (\n      <Menu onClick={onValueChange(group.key)}>\n        {generateSubmenus(group, node)}\n      </Menu>\n    );\n\n    const selectedpropertyValue =\n      node.transformer.process[group.key] || group.defaultValue;\n\n    const selectedValueLabel = selectedpropertyValue\n      ? group.selectOptions.find(\n          (item) =>\n            item.value === selectedpropertyValue ||\n            item.key === selectedpropertyValue\n        ).name\n      : group.placeholder;\n\n    return (\n      <Dropdown overlay={menus} trigger={[\"click\"]} disabled={group.disabled}>\n        <div className=\"config-group__setting-block\">\n          <div className=\"setting-label\">\n            <div className=\"setting-label__caption\">{group.label}</div>\n            <div className=\"setting-label__toggle\" onClick={toggleCollapse}>\n              {collapsed ? <DownCircleOutlined /> : <UpCircleOutlined />}\n            </div>\n          </div>\n\n          {collapsed ? null : (\n            <div className=\"setting-input-block\">\n              <div\n                className={`setting-input select ${\n                  !!node.transformer.process[group.key] ? \"\" : \"empty\"\n                }`}\n              >\n                {selectedValueLabel}\n              </div>\n              <i className=\"edit-icon iconfont iconvector-down\" />\n            </div>\n          )}\n        </div>\n      </Dropdown>\n    );\n  }\n\n  // otherwise render property of group\n  const menus = (\n    <Menu onClick={onValueChange(groupKey, property.key)}>\n      {generateSubmenus(property, node)}\n    </Menu>\n  );\n\n  const selectedpropertyValue =\n    node.transformer.process[groupKey][property.key] || property.defaultValue;\n\n  const selectedValueLabel = selectedpropertyValue\n    ? property.selectOptions.find(\n        (item) =>\n          item.value === selectedpropertyValue ||\n          item.key === selectedpropertyValue\n      ).name\n    : property.placeholder;\n\n  return (\n    <Dropdown overlay={menus} trigger={[\"click\"]} disabled={property.disabled}>\n      <div className=\"config-group__setting-block\">\n        <div className=\"setting-label\">{property.label}</div>\n\n        <div className=\"setting-input-block\">\n          <div\n            className={`setting-input select ${\n              !!node.transformer.process[groupKey] ? \"\" : \"empty\"\n            }`}\n          >\n            {selectedValueLabel}\n          </div>\n          <i className=\"edit-icon iconfont iconvector-down\" />\n        </div>\n      </div>\n    </Dropdown>\n  );\n};\n\nSelect.propTypes = {\n  onValueChange: PropTypes.func.isRequired,\n  node: PropTypes.object.isRequired,\n  groupKey: PropTypes.string,\n  property: PropTypes.object,\n  group: PropTypes.object,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nclass MultiSelect extends React.Component {\n  render() {\n    const { value, groupKey, property, onValueChange } = this.props;\n\n    return (\n      <div className=\"config-group__setting-block\">\n        <div className=\"setting-label\">\n          {property.label}\n        </div>\n\n        <div className=\"setting-input-block\">\n          <Select\n            mode=\"multiple\"\n            allowClear\n            style={{ width: '100%' }}\n            placeholder={property.placeholder}\n            value={value}\n            onChange={onValueChange(groupKey, property.key)}\n          >\n            {this._generateSelectOptions(property)}\n          </Select>\n        </div>\n      </div>\n    )\n  }\n\n  _generateSelectOptions = (property) => {\n    return property.selectOptions.map((item, i) => <Option key={i} value={item.key}>{item.name}</Option>)\n  }\n}\n\nMultiSelect.propTypes = {\n  groupKey: PropTypes.string.isRequired,\n  property: PropTypes.object.isRequired,\n  onValueChange: PropTypes.func.isRequired\n}\n\nexport default MultiSelect;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { produce } from 'immer';\nimport { Input, Select, Button } from 'antd';\nimport './aggregate-functions.less';\n\nconst InputGroup = Input.Group;\nconst SelectOption = Select.Option;\n\nconst AvailableAggregateFunctions = [\n  { name: \"count\", label: \"Count\" },\n  { name: \"sum\", label: \"Sum\" },\n  { name: \"min\", label: \"Min\" },\n  { name: \"max\", label: \"Max\" },\n  { name: \"avg\", label: \"Avg\" },\n  { name: \"mean\", label: \"Mean\" },\n  { name: \"decay\", label: \"Decay\" },\n  { name: \"unique\", label: \"Unique\" },\n  { name: \"entropy\", label: \"Entropy\" },\n  { name: \"frequency\", label: \"Frequency\" },\n  { name: \"topValues\", label: \"Top values\" },\n  { name: \"topCounts\", label: \"Top counts\" },\n  { name: \"topPercents\", label: \"Top percents\" },\n  { name: \"bottomValues\", label: \"Bottom values\" },\n  { name: \"bottomCounts\", label: \"Bottom counts\" },\n  { name: \"bottomPercents\", label: \"Bottom percents\" }\n]\n\nclass AggregateFunctionInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: undefined,\n      columns: [],\n      params: {}\n    }\n  }\n\n  render() {\n    const { groupKey, propery } = this.props;\n    const aggFunctionOptions = AvailableAggregateFunctions.map((f, i) => {\n      return <SelectOption key={i} value={f.name}>{f.label}</SelectOption>\n    })\n\n    let paramsSection = this._generateParamsSection();\n\n    return (\n      <div className='aggregate-function-input'>\n        <div className=\"aggregate-function-input__name\">\n          <Select\n            placeholder=\"select an aggreate function\"\n            onChange={this.handleFunctionNameChange}\n            value={this.state.name}\n          >\n            {aggFunctionOptions}\n          </Select>\n        </div>\n        <div className=\"aggregate-function-input__columns\">\n          <Select\n            mode=\"tags\"\n            className='aggregate-function-input__columns'\n            placeholder=\"select columns\"\n            onChange={this.handleColumsChange}\n            value={this.state.columns}\n          >\n          </Select>\n        </div>\n        { paramsSection }\n        <div className=\"aggregate-function-input__actions\">\n          <Button\n            className='cancel-btn'\n            onClick={this.props.onCancel}\n          >\n            Cancel\n          </Button>\n          <Button\n            className='confirm-btn'\n            type='primary'\n            onClick={this.handleConfirm}\n          >\n            Add\n          </Button>\n          <Button\n            className='confirm-and-add-btn'\n            type='primary'\n            onClick={this.confirmAndResetInput}\n          >\n            Add another one\n          </Button>\n        </div>\n      </div>\n    )\n  }\n\n  handleFunctionNameChange = (value) => {\n    this.setState({...this.state, name: value });\n  }\n\n  handleColumsChange = (value) => {\n    this.setState({ ...this.state, columns: value})\n  }\n\n  handleDecayIntervalColumnChange = (event) => {\n    this.setState({\n      ...this.state,\n      params: {\n        ...this.state.params,\n        decayIntervalColumn: event.target.value\n      }\n    })\n  }\n\n  handleDecayRatioChange = (event) => {\n    this.setState({\n      ...this.state,\n      params: {\n        ...this.state.params,\n        decayRatio: event.target.value\n      }\n    })\n  }\n\n  handleLimitChange = (event) => {\n    this.setState(\n      produce(draft => {\n        draft.params.limit = event.target.value\n      })\n    )\n  }\n\n  handleConfirm = () => {\n    this.props.onConfirm(this.state)\n  }\n\n  confirmAndResetInput = () => {\n    let func = Object.assign({}, this.state);\n    this.props.onNew(func);\n    this.setState({\n      name: undefined,\n      columns: [],\n      params: {}\n    });\n  }\n\n  _generateParamsSection = () => {\n    let section = null;\n    switch (this.state.name) {\n      case 'decay':\n        // decayInterval(string) and decayRatio(number) is required\n        section = (\n          <div className='aggregate-function-input__params'>\n            <InputGroup className='params-group' compact>\n              <Input\n                className='decay-interval-column'\n                placeholder='Decay interval column'\n                onChange={this.handleDecayIntervalColumnChange}\n              />\n              <Input\n                className='decay-ratio'\n                type='number'\n                placeholder='Decay ratio'\n                onChange={this.handleDecayRatioChange}\n              />\n            </InputGroup>\n          </div>\n        )\n        break;\n\n      case 'topValues':\n      case 'topCounts':\n      case 'topPercents':\n      case 'bottomValues':\n      case 'bottomCounts':\n      case 'bottomPercents':\n        // limit(number) is required\n        section = (\n          <div className='aggregate-function-input__params'>\n            <Input\n              type='number'\n              placeholder='limit'\n              onChange={this.handleLimitChange}\n            />\n          </div>\n        )\n        break;\n\n      default:\n        break;\n    }\n\n    return section;\n  }\n}\n\nAggregateFunctionInput.propTyps = {\n  groupKey: PropTypes.string.isRequired,\n  property: PropTypes.object.isRequired,\n  onValueChange: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired\n}\n\nexport default AggregateFunctionInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { produce } from 'immer';\nimport { toJS } from 'mobx'\nimport { map } from 'lodash';\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\nimport AggregateFunctionInput from './aggregate-function-input';\nimport './aggregate-functions.less';\n\nclass AggregateFunctionItem extends Component {\n  render() {\n    const { func, onDelete } = this.props;\n    return (\n      <div className='aggregate-function-item'>\n        <div className='caption'>\n          <span className='name'>{ func.name }</span>\n          <span className='columns'>({ func.columns.join(\", \") })</span>\n        </div>\n        <div className=\"actions\">\n          <DeleteOutlined onClick={onDelete} />\n        </div>\n        <div className='params'>\n          { map(func.params, (value, key) => <div key={key}>{key}: {value}</div>) }\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AggregateFunctions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showAggregateFunctionInput: true,\n      functions: toJS(props.value) || [] // TODO: make sure props.value is mobx observable array\n    }\n  }\n\n  render() {\n    const { groupKey, property, onValueChange } = this.props;\n\n    return (\n      <div className='config-group__setting-block'>\n        <div className='setting-label'>\n          <span>{property.label}</span>\n          <PlusCircleOutlined className='plus-icon' onClick={this.showInput} />\n        </div>\n        <div className='setting-list'>\n          { this.state.functions.map((f, i) => <AggregateFunctionItem key={i} func={f} onDelete={this.handleDelete(i)} />)}\n        </div>\n        {\n          this.state.showAggregateFunctionInput ?\n            <div className=\"setting-input-block\">\n              <AggregateFunctionInput\n                groupKey={groupKey}\n                property={property}\n                onCancel={this.hideInput}\n                onConfirm={this.addFunctionAndCloseInput}\n                onNew={this.addFunctionOnly}\n                onValueChange={onValueChange}\n              />\n            </div> :\n            null\n        }\n      </div>\n    )\n  }\n\n  handleDelete = (i) => () => {\n    const nextState = produce(this.state, draft => {\n      draft.functions.splice(i, 1);\n    })\n    this._handleValueChange(nextState.functions)\n    this.setState(nextState)\n  }\n\n  showInput = () => {\n    this.setState(\n      produce(draft => {\n        draft.showAggregateFunctionInput = true\n      })\n    )\n  }\n\n  hideInput = () => {\n    this.setState(\n      produce(draft => {\n        draft.showAggregateFunctionInput = false\n      })\n    )\n  }\n\n  addFunctionAndCloseInput = (func) => {\n    const nextState = produce(this.state, draft => {\n      draft.functions.push(func);\n      draft.showAggregateFunctionInput = false;\n    })\n    this._handleValueChange(nextState.functions)\n    this.setState(nextState)\n  }\n\n  addFunctionOnly = (func) => {\n    const nextState = produce(this.state, draft => {\n      draft.functions.push(func)\n    })\n    this._handleValueChange(nextState.functions)\n    this.setState(nextState)\n  }\n\n  _handleValueChange = (functions) => {\n    const { groupKey, property, onValueChange } = this.props;\n    onValueChange(groupKey, property.key)(functions)\n  }\n}\n\nAggregateFunctions.propTypes = {\n  groupKey: PropTypes.string.isRequired,\n  property: PropTypes.object.isRequired,\n  onValueChange: PropTypes.func.isRequired\n}\n\nexport default AggregateFunctions;\n","import React,  { useState } from \"react\";\nimport { Input } from \"antd\";\nimport { range } from \"lodash\";\nimport { produce } from 'immer';\nimport PropTypes from \"prop-types\";\nimport \"./fixed-array-input.less\";\n\nconst FixedArrayInput = (props) => {\n  const { groupKey, property, onValueChange, value } = props;\n  const [ arrayValue, setArrayValue ] = useState(property.defaultValue);\n\n  const handleValueChange = (i) => (event) => {\n    const updatedArrayValue = produce(arrayValue, draft => {\n        draft[i] = event.target.value\n      })\n    setArrayValue(updatedArrayValue)\n    onValueChange(groupKey, property.key)(updatedArrayValue)\n  }\n\n  return (\n    <div className=\"process-config-panel__setting-block\">\n      <div className=\"setting-label\">{property.label}</div>\n\n      <div className=\"setting-input-block fixed-array-input\">\n        {range(0, property.length).map((i) => (\n          <Input\n            key={i}\n            type={property.items.type}\n            value={value ? value[i]: undefined}\n            defaultValue={property.defaultValue[i]}\n            onChange={handleValueChange(i)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nFixedArrayInput.propTypes = {\n  groupKey: PropTypes.string,\n  property: PropTypes.object.isRequired,\n  onValueChange: PropTypes.func.isRequired,\n  value: PropTypes.array\n};\n\nexport default FixedArrayInput;\n","export const MergeByConditionOperators = [\n  {\n    name: \"is equal to\",\n    key: \"==\",\n  },\n  {\n    name: \"is not equal to\",\n    key: \"!=\",\n  },\n  {\n    name: \"is greater than\",\n    key: \">\",\n  },\n  {\n    name: \"is greator than or equal to\",\n    key: \">=\",\n  },\n  {\n    name: \"is less than\",\n    key: \"<\",\n  },\n  {\n    name: \"is less than or equal\",\n    key: \"<=\",\n  },\n]\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Select, Button, Form } from \"antd\";\nimport { MergeByConditionOperators } from '../../constants';\nimport \"./index.less\";\n\nconst SelectOption = Select.Option;\nconst FormItem = Form.Item;\n\nconst ConditionForm = (props) => {\n  const { columns } = props;\n  const [form] = Form.useForm();\n\n  const handleFinish = (values) => {\n    props.onFinish(values);\n  };\n\n  const initialValues = {\n    operator: \"==\",\n  };\n\n  return (\n    <Form\n      className=\"condition-form\"\n      form={form}\n      layout=\"vertical\"\n      onFinish={handleFinish}\n      initialValues={initialValues}\n    >\n      <FormItem name=\"leftColumn\" rules={[{ required: true }]}>\n        <Select placeholder=\"select a column\">\n          {columns.map((c, i) => (\n            <SelectOption key={i} value={\"$\" + c.name}>\n              {c.name}\n            </SelectOption>\n          ))}\n        </Select>\n      </FormItem>\n      <FormItem name=\"operator\" rules={[{ required: true }]}>\n        <Select placeholder=\"select a operator\">\n          {MergeByConditionOperators.map((op, i) => (\n            <SelectOption key={i} value={op.key}>\n              {op.name}\n            </SelectOption>\n          ))}\n        </Select>\n      </FormItem>\n      <FormItem name=\"rightColumn\" rules={[{ requried: true }]}>\n        <Select name=\"rightColumn\" placeholder=\"select a column\">\n          {columns.map((c, i) => (\n            <SelectOption key={i} value={\"$\" + c.name}>\n              {c.name}\n            </SelectOption>\n          ))}\n        </Select>\n      </FormItem>\n      <div className=\"condition-form__button-group\">\n        <Button className=\"cancel-button\" onClick={props.onCancel}>\n          Cancel\n        </Button>\n        <Button className=\"confirm-button\" type=\"primary\" htmlType=\"submit\">\n          Add\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nConditionForm.propTypes = {\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onCancel: PropTypes.func,\n};\n\nexport default ConditionForm;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Select } from \"antd\";\nimport { PlusCircleOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { MergeByConditionOperators } from \"../../constants\";\nimport { trimStartDollarSign } from \"../../utils/common\";\nimport ConditionForm from \"../../components/ConditionForm\";\nimport \"./condition-groups.less\";\n\nconst SelectOption = Select.Option;\n\nconst columns = [\n  {\n    name: \"uuid\",\n    type: \"string\",\n  },\n  {\n    name: \"credit\",\n    type: \"number\",\n  },\n  {\n    name: \"lastLogin\",\n    type: \"timestamp\",\n  },\n];\n\nconst ConditionGroupItem = (props) => {\n  const operator = MergeByConditionOperators.find(\n    (item) => item.key === props.conditionGroup[1]\n  );\n  return (\n    <div className=\"condition-group-item\">\n      <div className=\"condtion-group-item__expr\">\n        {trimStartDollarSign(props.conditionGroup[0])} {operator.name}{\" \"}\n        {trimStartDollarSign(props.conditionGroup[2])}\n      </div>\n      <div\n        className=\"condition-group-item__delete-icon\"\n        onClick={props.onDelete}\n      >\n        <DeleteOutlined />\n      </div>\n    </div>\n  );\n};\n\nconst ConditionGroups = (props) => {\n  const { property, groupKey, value: conditionGroups } = props;\n  const [showInput, setShowInput] = useState(false);\n  const [conditionFormVisible, setConditionFormVisible] = useState(false);\n\n  const toggleConditionForm = () => {\n    setConditionFormVisible(!conditionFormVisible);\n  };\n\n  const hideConditionForm = () => {\n    setConditionFormVisible(false);\n  };\n\n  const handleDelete = (i) => () => {\n    conditionGroups[0][1].splice(i, 1);\n    props.onValueChange(groupKey, property.key)(conditionGroups);\n  };\n\n  const handleAdd = (condition) => {\n    if (!!conditionGroups) {\n      conditionGroups[0][1].push([\n        condition.leftColumn,\n        condition.operator,\n        condition.rightColumn,\n      ]);\n      props.onValueChange(groupKey, property.key)(conditionGroups);\n    } else {\n      props.onValueChange(\n        groupKey,\n        property.key\n      )([\n        [\n          \"and\",\n          [[condition.leftColumn, condition.operator, condition.rightColumn]],\n        ],\n      ]);\n    }\n    setConditionFormVisible(false);\n  };\n\n  return (\n    <div className=\"config-group__setting-block\">\n      <div className=\"setting-label\">\n        <span>{property.label}</span>\n      </div>\n      <div className=\"setting-input-block condition-group-input\">\n        <div className=\"condition-group-list\">\n          {conditionGroups\n            ? conditionGroups[0][1].map((conditionGroup, i) => (\n                <ConditionGroupItem\n                  key={i}\n                  conditionGroup={conditionGroup}\n                  onDelete={handleDelete(i)}\n                />\n              ))\n            : null}\n        </div>\n        <Button\n          className=\"condition-group-input__add-condition-btn\"\n          icon={<PlusCircleOutlined />}\n          onClick={toggleConditionForm}\n        >\n          Add condition\n        </Button>\n        {conditionFormVisible ? (\n          <ConditionForm\n            columns={columns}\n            onCancel={hideConditionForm}\n            onFinish={handleAdd}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nConditionGroups.propTypes = {\n  groupKey: PropTypes.string.isRequired,\n  property: PropTypes.object.isRequired,\n  onValueChange: PropTypes.func.isRequired,\n};\n\nexport default ConditionGroups;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { UpCircleOutlined, DownCircleOutlined } from \"@ant-design/icons\";\nimport ConfigInput from \"./input\";\nimport ConfigArrayInput from \"./array-input\";\nimport ConfigSelect from \"./select\";\nimport ConfigMultiSelect from \"./multi-select\";\nimport AggregateFunctions from \"./aggregate-functions\";\nimport { safeGet } from \"../../utils/common\";\nimport FixedArrayInput from \"./fixed-array-input\";\nimport ConditionGroups from \"./condition-groups\";\n\nconst ObjectInput = ({ group, node, onValueChange }) => {\n  const [collapsed, setCollapsed] = useState(!group.required);\n\n  const showDetail = () => {\n    setCollapsed(false);\n  }\n\n  const hideDetail = () => {\n    setCollapsed(true);\n  }\n\n  if (collapsed) {\n    return (\n      <div className=\"object-group\">\n        <div className=\"object-group__heading\">\n          <div className=\"object-group__heading__caption\">\n            {group.label.toUpperCase()}\n          </div>\n          <div className=\"object-group__heading__toggle\">\n            <DownCircleOutlined onClick={showDetail} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  let objectContent = group.properties.map((p, i) => {\n    if (\n      !!p.relatedInfo &&\n      node.transformer.process[group.key][p.relatedInfo.key] !=\n        p.relatedInfo.value\n    ) {\n      return null;\n    }\n\n    if (p.type == \"input\") {\n      return (\n        <ConfigInput\n          key={i}\n          groupKey={group.key}\n          property={p}\n          value={safeGet(node.transformer.process, group.key, p.key)}\n          onValueChange={onValueChange(\"input\")}\n        />\n      );\n    }\n\n    if (p.type == \"select\") {\n      return (\n        <ConfigSelect\n          key={i}\n          groupKey={group.key}\n          property={p}\n          onValueChange={onValueChange(\"select\")}\n          node={node}\n        />\n      );\n    }\n\n    if (p.type == \"multiselect\") {\n      return (\n        <ConfigMultiSelect\n          key={i}\n          groupKey={group.key}\n          property={p}\n          value={safeGet(node.transformer.process, group.key, p.key)}\n          onValueChange={onValueChange(\"multiselect\")}\n        />\n      );\n    }\n\n    if (p.type === \"array\") {\n      if (p.items.type === \"AggregateFunction\") {\n        return (\n          <AggregateFunctions\n            groupKey={group.key}\n            property={p}\n            value={safeGet(node.transformer.process, group.key, p.key)}\n            onValueChange={onValueChange(\"AggregateFunction\")}\n          />\n        );\n      }\n\n      if (p.items.type === \"number\" || p.items.type === \"string\") {\n        return (\n          <ConfigArrayInput\n            group={group}\n            property={p}\n            value={safeGet(node.transformer.process, group.key, p.key)}\n            onValueChange={onValueChange(\"arrayinput\")}\n          />\n        );\n      }\n\n      if (p.items.type === \"ConditionGroup\") {\n        return (\n          <ConditionGroups\n            groupKey={group.key}\n            property={p}\n            value={safeGet(node.transformer.process, group.key, p.key)}\n            onValueChange={onValueChange(p.items.type)}\n          />\n        );\n      }\n    }\n\n    if (p.type == \"FixedArrayInput\") {\n      return (\n        <FixedArrayInput\n          groupKey={group.key}\n          property={p}\n          value={safeGet(node.transformer.process, group.key, p.key)}\n          onValueChange={onValueChange(\"FixedArrayInput\")}\n        />\n      );\n    }\n  });\n\n  return (\n    <div className=\"object-group\">\n      <div className=\"object-group__heading\">\n        <div className=\"object-group__heading__caption\">\n          {group.label.toUpperCase()}\n        </div>\n        <div className=\"object-group__heading__toggle\">\n          <UpCircleOutlined onClick={hideDetail} />\n        </div>\n      </div>\n      {objectContent}\n    </div>\n  );\n};\n\nObjectInput.propTypes = {\n  group: PropTypes.object.isRequired,\n  node: PropTypes.object.isRequired,\n  onValueChange: PropTypes.func,\n};\n\nexport default ObjectInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ConfigInput from \"./input\";\nimport ConfigArrayInput from \"./array-input\";\nimport ConfigSelect from \"./select\";\nimport ObjectInput from './object-input';\nimport \"./index.less\";\n\nconst ConfigGroup = ({ group, node, onValueChange }) => {\n  let content = null;\n\n  switch (group.type) {\n    case \"input\":\n      content = (\n        <ConfigInput\n          group={group}\n          value={node.transformer.process[group.key]}\n          onValueChange={onValueChange(\"input\")}\n        />\n      );\n      break;\n\n    case \"select\":\n      content = (\n        <ConfigSelect\n          group={group}\n          onValueChange={onValueChange(\"select\")}\n          node={node}\n        />\n      );\n      break;\n\n    case \"array\":\n      if (group.items.type === \"string\") {\n        content = (\n          <ConfigArrayInput\n            group={group}\n            value={node.transformer.process[group.key]}\n            onValueChange={onValueChange(\"arrayinput\")}\n          />\n        );\n      }\n      break;\n\n    case \"object\":\n      content = <ObjectInput group={group} node={node} onValueChange={onValueChange} />\n      break;\n\n    default:\n      break;\n  }\n  return <div className=\"config-group\">{content}</div>;\n};\n\nConfigGroup.propTypes = {\n  group: PropTypes.object.isRequired,\n  node: PropTypes.object.isRequired,\n  onValueChange: PropTypes.func,\n};\n\nexport default ConfigGroup;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { safeAssign } from \"../../utils/common\";\nimport ConfigGroup from \"../../components/ConfigGroup\";\nimport \"./index.less\";\n\nclass ProcessConfigPanel extends Component {\n  render() {\n    let { node, formConfig } = this.props;\n\n    return (\n      <div className=\"process-config-panel\">\n        <div className=\"process-config-panel__desc\">\n          Below are the node process configurations\n        </div>\n\n        {formConfig.map((group, i) => (\n          <ConfigGroup\n            key={i}\n            group={group}\n            node={node}\n            onValueChange={this.onValueChange}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  onValueChange = (type) => (group, key) => (eventOrValue) => {\n    let { node } = this.props;\n    var nextProcessConfig = {};\n\n    switch (type) {\n      case \"select\":\n        nextProcessConfig = safeAssign(\n          node.transformer.process,\n          group,\n          key,\n          eventOrValue.item.props.value !== undefined\n            ? eventOrValue.item.props.value\n            : eventOrValue.key\n        );\n        break;\n\n      case \"input\":\n        nextProcessConfig = safeAssign(\n          node.transformer.process,\n          group,\n          key,\n          eventOrValue.target.value\n        );\n        break;\n\n      case \"multiselect\":\n        nextProcessConfig = safeAssign(\n          node.transformer.process,\n          group,\n          key,\n          eventOrValue\n        );\n        break;\n\n      case \"AggregateFunction\":\n        nextProcessConfig = safeAssign(\n          node.transformer.process,\n          group,\n          key,\n          eventOrValue\n        );\n        break;\n\n      case \"ConditionGroup\":\n        nextProcessConfig = safeAssign(\n          node.transformer.process,\n          group,\n          key,\n          eventOrValue\n        );\n        break;\n\n      case \"arrayinput\":\n        nextProcessConfig = safeAssign(\n          node.transformer.process,\n          group,\n          key,\n          eventOrValue\n        );\n        break;\n\n      case \"FixedArrayInput\":\n        nextProcessConfig = safeAssign(\n          node.transformer.process,\n          group,\n          key,\n          eventOrValue\n        );\n        break;\n\n      default:\n        break;\n    }\n\n    this.props.updateNodeTransformerSetting(\"process\", nextProcessConfig);\n  };\n}\n\nProcessConfigPanel.propTypes = {\n  node: PropTypes.object.isRequired,\n  config: PropTypes.object.isRequired,\n  formConfig: PropTypes.array.isRequired,\n  findNodeById: PropTypes.func.isRequired,\n  updateNodeTransformerSetting: PropTypes.func.isRequired,\n};\n\nexport default ProcessConfigPanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.less';\n\nclass AddNewColumnSetting extends Component {\n  render() {\n    let { cancel, config } = this.props;\n\n    return (\n      <div className=\"add-new-column-setting\">\n        <div className=\"setting-block\">\n          <div className=\"setting-label\">Table</div>\n          <input className=\"setting-input\" ref=\"table\" defaultValue={ config.table } />\n        </div>\n\n        <div className=\"setting-block\">\n          <div className=\"setting-label\">Column name</div>\n          <input className=\"setting-input\" ref=\"column\" defaultValue={ config.column } />\n        </div>\n\n        <div className=\"setting-block\">\n          <div className=\"setting-label\">Column formula</div>\n          <input className=\"setting-input\" ref=\"formula\" defaultValue={ config.formula } />\n        </div>\n\n        <div className=\"setting-btns\">\n          <div className=\"setting-btns__cancel\" onClick={ cancel }>Cancel</div>\n          <div className=\"setting-btns__add\" onClick={ this.added }>Add</div>\n        </div>\n      </div>\n    );\n  }\n\n  added = () => {\n    let formData = {\n      table: this.refs[\"table\"].value,\n      column: this.refs[\"column\"].value,\n      formula: this.refs[\"formula\"].value\n    }\n\n    this.props.added(\"add_column\")(formData);\n  }\n}\n\nAddNewColumnSetting.propTypes = {\n  added: PropTypes.func.isRequired,\n  cancel: PropTypes.func.isRequired,\n  config: PropTypes.object.isRequired,\n};\n\nexport default AddNewColumnSetting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeObservable, observable, action, computed } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport { Menu, Dropdown } from 'antd';\n\nimport './index.less';\n\nconst OPERATIONS = {\n  \"equal_to\": \"Equal to\",\n  \"contains\": \"Contains\",\n  \"not_in\": \"Not in\",\n  \"is_null\": \"Is null\",\n  \"is_not_null\": \"Is not null\",\n};\n\n@observer\nclass FilterColumnSetting extends Component {\n  @observable currentConfig = {\n    operator: \"equal_to\",\n  };\n\n  constructor() {\n    super();\n    makeObservable(this);\n  }\n\n  render() {\n    let { cancel, config } = this.props;\n\n    return (\n      <div className=\"filter-column-setting\">\n        <div className=\"setting-block\">\n          <div className=\"setting-label\">Table</div>\n          <input className=\"setting-input\" placeholder=\"Select table\" ref=\"table\" defaultValue={ config.table } />\n        </div>\n\n        <div className=\"setting-block\">\n          <div className=\"setting-label\">Column</div>\n          <input className=\"setting-input with-bottom-margin\" placeholder=\"Set column\" ref=\"column\" defaultValue={ config.column } />\n\n          <Dropdown overlay={ this._renderOperations() }  trigger={['click']}>\n            <div className=\"setting-select with-bottom-margin\">\n              <span>{ config.operator || this.currentOperator }</span>\n              <i className=\"iconfont iconvector-down\" />\n            </div>\n          </Dropdown>\n\n          {\n            [\"is_null\", \"is_not_null\"].indexOf(this.currentConfig.operator) != -1 ?\n              null:\n              <input className=\"setting-input\" placeholder=\"Value\" ref=\"filterValue\" defaultValue={ config.filterValue } />\n          }\n        </div>\n\n        <div className=\"setting-btns\">\n          <div className=\"setting-btns__cancel\" onClick={ cancel }>Cancel</div>\n          <div className=\"setting-btns__add\" onClick={ this.added }>Add</div>\n        </div>\n      </div>\n    );\n  }\n\n  _renderOperations = () => (\n    <Menu onClick={this.selectOperation}>\n      <Menu.Item key=\"equal_to\">\n        { OPERATIONS[\"equal_to\"] }\n      </Menu.Item>\n      <Menu.Item key=\"contains\">\n        { OPERATIONS[\"contains\"] }\n      </Menu.Item>\n      <Menu.Item key=\"not_in\">\n        { OPERATIONS[\"not_in\"] }\n      </Menu.Item>\n      <Menu.Item key=\"is_null\">\n        { OPERATIONS[\"is_null\"] }\n      </Menu.Item>\n      <Menu.Item key=\"is_not_null\">\n        { OPERATIONS[\"is_not_null\"] }\n      </Menu.Item>\n    </Menu>\n  )\n\n  selectOperation = (e) => {\n    this.currentConfig.operator = e.key;\n  }\n\n  @computed\n  get currentOperator() {\n    return OPERATIONS[this.currentConfig.operator];\n  }\n\n  added = () => {\n    let filterValue = [\"is_null\", \"is_not_null\"].indexOf(this.currentConfig.operator) != -1 ? undefined : this.refs[\"filterValue\"].value;\n\n    let data = {\n      ...this.currentConfig,\n      table: this.refs[\"table\"].value,\n      column: this.refs[\"column\"].value,\n      filterValue: filterValue,\n    };\n\n    this.props.added(\"filter_column\")(data);\n  }\n}\n\nFilterColumnSetting.propTypes = {\n  cancel: PropTypes.func.isRequired,\n  added: PropTypes.func.isRequired,\n  config: PropTypes.object.isRequired,\n};\n\nexport default FilterColumnSetting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.less';\n\nclass RenameColumnSetting extends Component {\n  render() {\n    let { cancel, config } = this.props;\n\n    return (\n      <div className=\"rename-column-setting\">\n        <div className=\"setting-block\">\n          <div className=\"setting-label\">Table</div>\n          <input className=\"setting-input\" placeholder=\"Select table\" ref=\"table\" defaultValue={ config.table } />\n        </div>\n\n        <div className=\"setting-block\">\n          <div className=\"setting-label\">Column</div>\n          <input className=\"setting-input with-bottom-margin\" placeholder=\"Select column\" ref=\"column\" defaultValue={ config.column } />\n          <input className=\"setting-input\" placeholder=\"New name\" ref=\"newName\" defaultValue={ config.newName } />\n        </div>\n\n        <div className=\"setting-block\">\n          <input className=\"setting-check-box\" type=\"checkbox\" />\n          <label className=\"setting-check-box-label\">continue adding</label>\n        </div>\n\n        <div className=\"setting-btns\">\n          <div className=\"setting-btns__cancel\" onClick={ cancel }>Cancel</div>\n          <div className=\"setting-btns__add\" onClick={ this.added }>Add</div>\n        </div>\n      </div>\n    );\n  }\n\n  added = () => {\n    let data = {\n      table: this.refs[\"table\"].value,\n      column: this.refs[\"column\"].value,\n      newName: this.refs[\"newName\"].value,\n    };\n\n    this.props.added(\"rename_column\")(data);\n  }\n}\n\nRenameColumnSetting.propTypes = {\n  cancel: PropTypes.func.isRequired,\n  added: PropTypes.func.isRequired,\n  config: PropTypes.object.isRequired,\n};\n\nexport default RenameColumnSetting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeObservable, observable, action, computed } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport './index.less';\n\n@observer\nclass KeepOrDropColumnSetting extends Component {\n  @observable currentConfig = {\n    type: \"keep\",\n  };\n\n  constructor() {\n    super();\n    makeObservable(this);\n  }\n\n  render() {\n    let { cancel, config } = this.props;\n\n    return (\n      <div className=\"keey-or-drop-column-setting\">\n        <div className=\"setting-radios\">\n          <div className=\"setting-radios__radio-btn\">\n            <input id=\"keep\" type=\"radio\" name=\"keep_or_drop\" value=\"keep\" defaultChecked={ config.type == \"keep\" } />\n            <label htmlFor=\"keep\">Keep</label>\n          </div>\n\n          <div className=\"setting-radios__radio-btn\">\n            <input id=\"drop\" type=\"radio\" name=\"keep_or_drop\" value=\"drop\" defaultChecked={ config.type == \"drop\" } />\n            <label htmlFor=\"drop\">Drop</label>\n          </div>\n        </div>\n\n        <div className=\"setting-block\">\n          <div className=\"setting-label\">Table</div>\n          <input className=\"setting-input\" placeholder=\"Select table\" ref=\"table\" defaultValue={ config.table } />\n        </div>\n\n        <div className=\"setting-block\">\n          <div className=\"setting-label\">Column</div>\n          <input className=\"setting-input\" placeholder=\"Set column\" ref=\"column\" defaultValue={ config.column } />\n        </div>\n\n        <div className=\"setting-btns\">\n          <div className=\"setting-btns__cancel\" onClick={ cancel }>Cancel</div>\n          <div className=\"setting-btns__add\" onClick={ this.added }>Add</div>\n        </div>\n      </div>\n    );\n  }\n\n  added = () => {\n    let data = {\n      ...this.currentConfig,\n      table: this.refs[\"table\"].value,\n      column: this.refs[\"column\"].value,\n    };\n\n    this.props.added(`${this.currentConfig.type}_column`)(data);\n  }\n}\n\nKeepOrDropColumnSetting.propTypes = {\n  cancel: PropTypes.func.isRequired,\n  added: PropTypes.func.isRequired,\n};\n\nexport default KeepOrDropColumnSetting;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeObservable, observable, action, computed } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport { Menu, Dropdown } from 'antd';\n\nimport AddNewColumnSetting from './AddNewColumnSetting';\nimport FilterColumnSetting from './FilterColumnSetting';\nimport RenameColumnSetting from './RenameColumnSetting';\nimport KeepOrDropColumnSetting from './KeepOrDropColumnSetting';\n\nimport './index.less';\n\nconst CONFIG_PANELS = {\n  \"add_column\": \"Add new column\",\n  \"filter_column\": \"Filter column\",\n  \"rename_column\": \"Rename column\",\n  \"keep_or_drop_column\": \"Keep/Drop column\",\n};\n\n@observer\nclass ConfigSettingPanel extends Component {\n  @observable currentSettingPanel = \"add_column\";\n\n  constructor() {\n    super();\n    makeObservable(this);\n  }\n\n  render() {\n    return (\n      <div className=\"config-setting-panel\">\n        <Dropdown overlay={ this._renderMenu() }  trigger={['click']}>\n          <div className=\"config-setting-panel__switch-tab-bar\">\n            <span>{ this.currentSettingPanelName }</span>\n            <i className=\"iconfont iconvector-down\" />\n          </div>\n        </Dropdown>\n\n        <div className=\"config-setting-panel__panel-body\">\n          { this._renderSettingPanels() }\n        </div>\n      </div>\n    );\n  }\n\n  _renderSettingPanels = () => {\n    let { cancel, added, config, configType } = this.props;\n    if (configType == \"keep_column\" || configType == \"drop_column\") {\n      configType = \"keep_or_drop_column\";\n    }\n\n    switch(configType || this.currentSettingPanel) {\n      case \"add_column\":\n        return <AddNewColumnSetting config={ config } cancel={ cancel } added={ added } />;\n        break;\n      case \"filter_column\":\n        return <FilterColumnSetting config={ config } cancel={ cancel } added={ added } />;\n        break;\n      case \"rename_column\":\n        return <RenameColumnSetting config={ config } cancel={ cancel } added={ added } />;\n        break;\n      case \"keep_or_drop_column\":\n        return <KeepOrDropColumnSetting config={ config } cancel={ cancel } added={ added } />;\n        break;\n    }\n  }\n\n  _renderMenu = () => (\n    <Menu onClick={this.selectConfigPanels}>\n      <Menu.Item key=\"add_column\">\n        { CONFIG_PANELS[\"add_column\"] }\n      </Menu.Item>\n      <Menu.Item key=\"filter_column\">\n        { CONFIG_PANELS[\"filter_column\"] }\n      </Menu.Item>\n      <Menu.Item key=\"rename_column\">\n        { CONFIG_PANELS[\"rename_column\"] }\n      </Menu.Item>\n      <Menu.Item key=\"keep_or_drop_column\">\n        { CONFIG_PANELS[\"keep_or_drop_column\"] }\n      </Menu.Item>\n    </Menu>\n  )\n\n  selectConfigPanels = (e) => {\n    this.currentSettingPanel = e.key;\n  }\n\n  @computed\n  get currentSettingPanelName() {\n    let { configType } = this.props;\n    if (configType == \"keep_column\" || configType == \"drop_column\") {\n      configType = \"keep_or_drop_column\";\n    }\n    return CONFIG_PANELS[configType || this.currentSettingPanel];\n  }\n}\n\nConfigSettingPanel.propTypes = {\n  config: PropTypes.object.isRequired,\n  configType: PropTypes.string,\n  cancel: PropTypes.func.isRequired,\n  added: PropTypes.func.isRequired,\n};\n\nexport default ConfigSettingPanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Menu, Dropdown } from 'antd';\n\nimport './index.less';\n\nclass SavedConfigsList extends Component {\n  render() {\n    let { configs } = this.props;\n\n    return (\n      <div className=\"saved-configs-list\">\n        {\n          Object.keys(configs).map((type) => {\n            return configs[type].map((config, m) => (\n              <div className=\"saved-configs-list__config-block\" key={`${type}-${m}`}>\n                <div className=\"saved-configs-list__config-block--info-block\">\n                  <div className=\"saved-configs-list__config-block--title\">{ type }</div>\n                  <div className=\"saved-configs-list__config-block--desc\">1 columns</div>\n                </div>\n\n                <Dropdown overlay={ this._renderActions(type, m) }  trigger={['click']}>\n                  <i className=\"iconfont iconmore\" />\n                </Dropdown>\n              </div>\n            ))\n          }).flat()\n        }\n      </div>\n    );\n  }\n\n  _renderActions = (type, idx) => (\n    <Menu onClick={this.doAction(type, idx)}>\n      <Menu.Item key=\"edit\" icon={ <i className=\"iconfont iconpencil\" /> }>\n        Edit\n      </Menu.Item>\n      <Menu.Item key=\"delete\" icon={ <i className=\"iconfont iconclipboard-checked\" /> }>\n        Delete\n      </Menu.Item>\n    </Menu>\n  )\n\n  doAction = (type, idx) => (e) => {\n    let action = e.key;\n\n    switch (action) {\n      case \"delete\":\n        this.props.removeRule(type, idx);\n        break;\n      case \"edit\":\n        this.props.setCurrentConfigInfo(type, idx);\n        break;\n    }\n  }\n}\n\nSavedConfigsList.propTypes = {\n  configs: PropTypes.object.isRequired,\n  setCurrentConfigInfo: PropTypes.func.isRequired,\n  removeRule: PropTypes.func.isRequired,\n};\n\nexport default SavedConfigsList;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport { makeObservable, observable, action, computed } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport ConfigSettingPanel from '../ConfigSettings';\nimport SavedConfigsList from '../SavedConfigsList';\n\nimport './index.less';\n\n@observer\nclass BeforeConfigPanel extends Component {\n  @observable isShowingPanel = false;\n  @observable currentConfigInfo = null;\n\n  constructor() {\n    super();\n    makeObservable(this);\n  }\n\n  render() {\n    let { config } = this.props;\n\n    return (\n      <div className=\"before-config-panel\">\n        <div className=\"before-config-panel__desc\">\n          Below are the operations that are applied on columns, you can rename, add new column, skip, or filter them.\n        </div>\n\n        <div className=\"before-config-panel__body\">\n          {\n            this.isShowingPanel || this.currentConfigInfo ?\n              <ConfigSettingPanel\n                config={ this.currentConfig }\n                configType={ this.currentConfigInfo ? this.currentConfigInfo.type : null }\n                cancel={ this.closeConfigPanel }\n                added={ this.addedNewRule }\n              />:\n              <Fragment>\n                <div className=\"before-config-panel__add-operation-btn\" onClick={ this.openConfigPanel } />\n                <SavedConfigsList\n                  configs={ config }\n                  setCurrentConfigInfo={ this.setCurrentConfigInfo }\n                  removeRule={ this.removeRule }\n                />\n              </Fragment>\n          }\n        </div>\n      </div>\n    );\n  }\n\n  openConfigPanel = () => {\n    this.isShowingPanel = true;\n  }\n\n  closeConfigPanel = () => {\n    this.isShowingPanel = false;\n    this.currentConfigInfo = null;\n  }\n\n  addedNewRule = (type) => (rule) => {\n    this.isShowingPanel = false;\n    this.currentConfigInfo = null;\n\n    let config = {...this.props.config};\n    if (!!config[type]) {\n      config[type].push(rule);\n    } else {\n      config[type] = [rule];\n    }\n    this.props.updateNodeTransformerSetting(\"before\", config);\n  }\n\n  removeRule = (type, idx) => {\n    this.isShowingPanel = false;\n    this.currentConfigInfo = null;\n\n    const config = update(this.props.config, {\n      [type]: {\n        $splice: [[idx, 1]]\n      }\n    });\n    this.props.updateNodeTransformerSetting(\"before\", config);\n  }\n\n  setCurrentConfigInfo = (type, idx) => {\n    this.currentConfigInfo = { type, idx };\n  }\n\n  @computed\n  get currentConfig() {\n    if (!this.currentConfigInfo) {\n      return {};\n    }\n\n    const { type, idx } = this.currentConfigInfo;\n    return this.props.config[type][idx];\n  }\n}\n\nBeforeConfigPanel.propTypes = {\n  config: PropTypes.object.isRequired,\n  updateNodeTransformerSetting: PropTypes.func.isRequired\n};\n\nexport default BeforeConfigPanel;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport { makeObservable, observable, action, computed } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport ConfigSettingPanel from '../ConfigSettings';\nimport SavedConfigsList from '../SavedConfigsList';\n\nimport './index.less';\n\n@observer\nclass AfterConfigPanel extends Component {\n  @observable isShowingPanel = false;\n  @observable currentConfigInfo = null;\n\n  constructor() {\n    super();\n    makeObservable(this);\n  }\n\n  render() {\n    let { config } = this.props;\n\n    return (\n      <div className=\"before-config-panel\">\n        <div className=\"before-config-panel__desc\">\n          Below are the operations that are applied on columns, you can rename, add new column, skip, or filter them.\n        </div>\n\n        <div className=\"before-config-panel__body\">\n          {\n            this.isShowingPanel || this.currentConfigInfo ?\n              <ConfigSettingPanel\n                config={ this.currentConfig }\n                configType={ this.currentConfigInfo ? this.currentConfigInfo.type : null }\n                cancel={ this.closeConfigPanel }\n                added={ this.addedNewRule }\n              />:\n              <Fragment>\n                <div className=\"before-config-panel__add-operation-btn\" onClick={ this.openConfigPanel } />\n                <SavedConfigsList\n                  configs={ config }\n                  setCurrentConfigInfo={ this.setCurrentConfigInfo }\n                  removeRule={ this.removeRule }\n                />\n              </Fragment>\n          }\n        </div>\n      </div>\n    );\n  }\n\n  openConfigPanel = () => {\n    this.isShowingPanel = true;\n  }\n\n  closeConfigPanel = () => {\n    this.isShowingPanel = false;\n    this.currentConfigInfo = null;\n  }\n\n  addedNewRule = (type) => (rule) => {\n    this.isShowingPanel = false;\n    this.currentConfigInfo = null;\n\n    let config = {...this.props.config};\n    if (!!config[type]) {\n      config[type].push(rule);\n    } else {\n      config[type] = [rule];\n    }\n    this.props.updateNodeTransformerSetting(\"after\", config);\n  }\n\n  removeRule = (type, idx) => {\n    this.isShowingPanel = false;\n    this.currentConfigInfo = null;\n\n    const config = update(this.props.config, {\n      [type]: {\n        $splice: [[idx, 1]]\n      }\n    });\n    this.props.updateNodeTransformerSetting(\"after\", config);\n  }\n\n  setCurrentConfigInfo = (type, idx) => {\n    this.currentConfigInfo = { type, idx };\n  }\n\n  @computed\n  get currentConfig() {\n    if (!this.currentConfigInfo) {\n      return {};\n    }\n\n    const { type, idx } = this.currentConfigInfo;\n    return this.props.config[type][idx];\n  }\n}\n\nAfterConfigPanel.propTypes = {\n  config: PropTypes.object.isRequired,\n  updateNodeTransformerSetting: PropTypes.func.isRequired\n};\n\nexport default AfterConfigPanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeObservable, observable, action, computed } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport NODES from '../../constants/Nodes';\nimport ProcessConfigPanel from '../ProcessConfigPanel';\nimport BeforeConfigPanel from '../BeforeConfigPanel';\nimport AfterConfigPanel from '../AfterConfigPanel';\n\nimport './index.less';\n\n@observer\nclass DetailConfigPanel extends Component {\n  @observable currentTab = \"process\";\n\n  constructor() {\n    super();\n    makeObservable(this);\n  }\n\n  render() {\n    return (\n      <div className=\"detail-config-panel\">\n        <div className=\"detail-config-panel__tabs-bar\">\n          <div className={`detail-config-panel__tabs-bar--tab ${ this.currentTab == \"process\" ? \"activated\" : \"\"}`}\n               onClick={ this.switchTab(\"process\") }>\n            Process\n          </div>\n\n          <div className={`detail-config-panel__tabs-bar--tab ${ this.currentTab == \"before\" ? \"activated\" : \"\"}`}\n               onClick={ this.switchTab(\"before\") }>\n            Before\n          </div>\n\n          <div className={`detail-config-panel__tabs-bar--tab ${ this.currentTab == \"after\" ? \"activated\" : \"\"}`}\n               onClick={ this.switchTab(\"after\") }>\n            After\n          </div>\n        </div>\n\n        <div className=\"detail-config-panel__body\">\n          { this.renderPanel }\n        </div>\n      </div>\n    );\n  }\n\n  @action\n  switchTab = (tabName) => () => {\n    this.currentTab = tabName;\n  }\n\n  @computed\n  get renderPanel() {\n    let { node, findNodeById, updateNodeTransformerSetting } = this.props;\n\n    switch(this.currentTab) {\n      case \"process\":\n        return (\n          <ProcessConfigPanel\n            node={ node }\n            findNodeById={ findNodeById }\n            config={ node.transformer.process }\n            formConfig={ NODES[node.transformer[\"className\"]].inputFormConfig }\n            updateNodeTransformerSetting={ updateNodeTransformerSetting }\n          />\n        );\n        break;\n      case \"before\":\n        return (\n          <BeforeConfigPanel\n            config={node.transformer.before}\n            updateNodeTransformerSetting={ updateNodeTransformerSetting }\n          />\n        );\n        break;\n      case \"after\":\n        return (\n          <AfterConfigPanel\n            config={node.transformer.after}\n            updateNodeTransformerSetting={ updateNodeTransformerSetting }\n          />\n        );\n        break;\n    }\n  }\n};\n\nDetailConfigPanel.propTypes = {\n  node: PropTypes.object.isRequired,\n  findNodeById: PropTypes.func.isRequired,\n  updateNodeTransformerSetting: PropTypes.func.isRequired,\n};\n\nexport default DetailConfigPanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport NodeDetailsPanel from '../NodeDetailsPanel';\nimport DetailConfigPanel from '../DetailConfigPanel';\n\nimport { makeObservable, observable, action } from 'mobx';\nimport { observer } from 'mobx-react';\n\nimport './index.less';\n\n@observer\nclass DetailSettingBar extends Component {\n  @observable currentTab = \"detail\";\n\n  constructor() {\n    super();\n    makeObservable(this);\n  }\n\n  render() {\n    let { node, findNodeById, updateNodeTransformerSetting, updateNodeDetailSetting } = this.props;\n\n    if (!node) {\n      return null;\n    }\n\n    return (\n      <div className={`detail-setting-bar ${!!node ? \"\" : \"hidden\"}`}>\n        <div className=\"detail-setting-bar__header\">\n          <div className={`detail-setting-bar__header--tab ${  this.currentTab == \"detail\" ? \"activated\" : \"\" }`}\n               onClick={ this.switchTab(\"detail\") }>\n            Node details\n          </div>\n          <div className={`detail-setting-bar__header--tab ${  this.currentTab == \"config\" ? \"activated\" : \"\" }`}\n               onClick={ this.switchTab(\"config\") }>\n            Configuration\n          </div>\n        </div>\n\n        <div className=\"detail-setting-bar__body\">\n          {\n            this.currentTab == \"detail\" ?\n              <React.Fragment>\n                <NodeDetailsPanel\n                  node={node}\n                  updateNodeDetailSetting={updateNodeDetailSetting}\n                />\n              </React.Fragment>:\n              <DetailConfigPanel\n                node={node}\n                findNodeById={findNodeById}\n                updateNodeTransformerSetting={updateNodeTransformerSetting}\n              />\n          }\n        </div>\n      </div>\n    );\n  }\n\n  @action\n  switchTab = (tabName) => () => {\n    this.currentTab = tabName;\n  }\n};\n\nDetailSettingBar.propTypes = {\n  node: PropTypes.object,\n  findNodeById: PropTypes.func.isRequired,\n  updateNodeTransformerSetting: PropTypes.func.isRequired,\n  updateNodeDetailSetting: PropTypes.func.isRequired,\n};\n\nexport default DetailSettingBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.less';\n\nclass LogsTimeline extends Component {\n  render() {\n    return (\n      <div className=\"logs-timeline\">\n        <div className=\"logs-timeline__log-block\">\n          <div className=\"logs-timeline__log-block--datetime\">\n            <div className=\"logs-timeline__log-block--date\">12.01.2021</div>\n            <div className=\"logs-timeline__log-block--time\">12:35</div>\n          </div>\n\n          <div className=\"logs-timeline__log-block--connector\" />\n\n          <div className=\"logs-timeline__log-block--info-block\">\n            <div className=\"logs-timeline__log-block--header succeed\">\n              Run: Success\n            </div>\n\n            <div className=\"logs-timeline__log-block--desc-info\">\n              by User#\n            </div>\n\n            <div className=\"logs-timeline__log-block--desc-info\">\n              Time running: 22 m 45s\n            </div>\n\n            <div className=\"logs-timeline__log-block--view-btn\">\n              <i className=\"iconfont iconlog\" />\n              View log\n            </div>\n          </div>\n        </div>\n\n        <div className=\"logs-timeline__log-block\">\n          <div className=\"logs-timeline__log-block--datetime\">\n            <div className=\"logs-timeline__log-block--date\">12.01.2021</div>\n            <div className=\"logs-timeline__log-block--time\">12:35</div>\n          </div>\n\n          <div className=\"logs-timeline__log-block--connector\" />\n\n          <div className=\"logs-timeline__log-block--info-block\">\n            <div className=\"logs-timeline__log-block--header failed\">\n              Run: Failed\n            </div>\n\n            <div className=\"logs-timeline__log-block--desc-info\">\n              by User#\n            </div>\n\n            <div className=\"logs-timeline__log-block--desc-info\">\n              Time running: 22 m 45s\n            </div>\n\n            <div className=\"logs-timeline__log-block--view-btn\">\n              <i className=\"iconfont iconlog\" />\n              View log\n            </div>\n          </div>\n        </div>\n\n        <div className=\"logs-timeline__log-block\">\n          <div className=\"logs-timeline__log-block--datetime\">\n            <div className=\"logs-timeline__log-block--date\">12.01.2021</div>\n            <div className=\"logs-timeline__log-block--time\">12:35</div>\n          </div>\n\n          <div className=\"logs-timeline__log-block--connector\" />\n\n          <div className=\"logs-timeline__log-block--info-block\">\n            <div className=\"logs-timeline__log-block--header\">\n              Created\n            </div>\n\n            <div className=\"logs-timeline__log-block--desc-info\">\n              by User#\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default LogsTimeline;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\n\nimport { Menu, Dropdown } from 'antd';\n\nimport LogsTimeline from '../../components/LogsTimeline';\n\nimport './index.less';\n\nclass PredictionDetailsPanel extends Component {\n  render() {\n    const { project } = this.props;\n\n    return (\n      <div className=\"prediction-details-panel\">\n        <div className=\"prediction-details-panel__header\">Prediction details</div>\n        <div className=\"prediction-details-panel__main\">\n          <div className=\"prediction-details-panel__form-block\">\n            <div className=\"prediction-details-panel__form-block--label\">Prediction name</div>\n            <input className=\"prediction-details-panel__form-block--form-input\" defaultValue={ project.project ? project.project.name : \"\" } onChange={ this.updateProject('name') } />\n          </div>\n\n          <div className=\"prediction-details-panel__form-block\">\n            <div className=\"prediction-details-panel__form-block--label\">Prediction name</div>\n            <textarea className=\"prediction-details-panel__form-block--form-textarea\" defaultValue={ project.project ? project.project.description : \"\" } onChange={ this.updateProject('description') } />\n          </div>\n\n          <div className=\"prediction-details-panel__inline-info\">\n            <span className=\"prediction-details-panel__inline-info--label\">Prediction type: </span>\n            <span className=\"prediction-details-panel__inline-info--value\">{ project.project ? project.project.projectType : \"\" }</span>\n          </div>\n\n          <Dropdown overlay={ this._renderSettingBtns() }  trigger={['click']}>\n            <div className=\"prediction-details-panel__main--setting-btn\" />\n          </Dropdown>\n        </div>\n\n        <div className=\"detail-setting-bar__body--gap\" />\n        <LogsTimeline />\n      </div>\n    );\n  }\n\n  _renderSettingBtns = () => (\n    <Menu onClick={ this._reactSetting }>\n      <Menu.Item key=\"edit\">\n        Edit\n      </Menu.Item>\n      <Menu.Item key=\"delete\">\n        Delete\n      </Menu.Item>\n    </Menu>\n  )\n\n  _reactSetting = (e) => {\n    switch (e.key) {\n      case \"delete\": {\n        this.props.delete(this.props.project.id, () => {\n          this.props.navigateTo('/projects');\n        });\n        break;\n      }\n      case \"edit\": {\n        this.props.editProjectDetail(false);\n        break;\n      }\n    }\n  }\n\n  updateProject = (column) => {\n    return debounce((e) => {\n      const project = { ...this.props.project.project, [column]: e.target.value };\n      this.props.update({ id: this.props.project.id, project });\n    }, 1000);\n  }\n}\n\nPredictionDetailsPanel.propTypes = {\n  project: PropTypes.object.isRequired,\n  update: PropTypes.func.isRequired,\n  delete: PropTypes.func.isRequired,\n  navigateTo: PropTypes.func.isRequired,\n  editProjectDetail: PropTypes.func.isRequired,\n};\n\nexport default PredictionDetailsPanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.less';\n\nclass PublishTemplateModal extends Component {\n  render() {\n    return (\n      <div className=\"publish_template_modal\">\n        <div className=\"publish_template_modal__layer\" />\n\n        <div className=\"publish_template_modal__body\">\n          <div className=\"publish_template_modal__body--label\">Publish workflow template</div>\n\n          <div className=\"publish_template_modal__body--form-block\">\n            <div className=\"publish_template_modal__body--form-label\">Name</div>\n            <input className=\"publish_template_modal__body--form-input\" placeholder=\"Enter name for this template\" />\n          </div>\n\n          <div className=\"publish_template_modal__body--form-block\">\n            <div className=\"publish_template_modal__body--form-label\">Description</div>\n            <textarea className=\"publish_template_modal__body--form-textarea\" placeholder=\"Enter description for this template\" />\n          </div>\n\n          <div className=\"publish_template_modal__body--btn-group\">\n            <div className=\"publish_template_modal__body--btn cancel\" onClick={ this.props.closeModal }>Cancel</div>\n            <div className=\"publish_template_modal__body--btn create\" onClick={ this.publishTemplate }>Publish template</div>\n          </div>\n\n          <div className=\"publish_template_modal__body--close-btn\" onClick={ this.props.closeModal }>\n            <i className=\"iconfont iconremove\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  publishTemplate = () => {\n    this.props.publishTemplate();\n    this.props.navigateTo('/predictions/new');\n  }\n}\n\nPublishTemplateModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  publishTemplate: PropTypes.func.isRequired,\n  navigateTo: PropTypes.func.isRequired,\n};\n\nexport default PublishTemplateModal;\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { makeObservable, observable, action, computed } from 'mobx';\nimport { v4 as uuidV4 } from 'uuid';\nimport NODES from \"../../constants/Nodes\";\nimport { MxGraph2Json, GraphX } from \"../../lib/MxGraphUtils\";\nimport { matchPath } from \"react-router-dom\";\n\nimport Workflow from '../../components/Workflow';\nimport NodesListBar from '../../components/NodesListBar';\nimport DetailSettingBar from '../../components/DetailSettingBar';\nimport PredictionDetailsPanel from '../../components/PredictionDetailsPanel';\nimport PublishTemplateModal from '../../components/PublishTemplateModal';\n\nimport './index.less';\n\n@inject(\"rulesStore\", \"projectStore\", \"routingStore\", \"templatesStore\")\n@observer\nclass Workspace extends Component {\n  @observable showPublishTemplateModal = false;\n  @observable isEditingProjectDetail = false;\n\n  constructor(props) {\n    super(props);\n    makeObservable(this);\n    // UUID is used to reference to the graphx instance\n    this.graphxInstanceUUID = uuidV4();\n  }\n\n  componentDidMount() {\n    const projectId = this._getProjectId();\n    this.props.projectStore.setCurrentProject(projectId);\n\n    setTimeout(() => {\n      this.initGraphx()\n    }, 300);\n  }\n\n  // componentDidUpdate(preProps) {\n  //   if (preProps.rulesStore.layouts != this.props.rulesStore.layouts) {\n  //     window[this.graphxInstanceUUID].render({ layouts: this.props.rulesStore.layouts });\n  //   }\n  // }\n\n  render() {\n    let { rulesStore, projectStore, routingStore, templatesStore } = this.props;\n\n    return (\n      <div className=\"workspace\">\n        <section className=\"workspace__main\">\n          <div className=\"workspace__main--content\">\n            <Workflow\n              currentProject={rulesStore.currentProject}\n              addNewNode={rulesStore.addNewNode}\n              selectNode={rulesStore.selectNode}\n              connectNodes={rulesStore.connectNodes}\n              removeNodes={rulesStore.removeNodes}\n              updateLayouts={rulesStore.updateLayouts}\n              layouts={rulesStore.layouts}\n              showModal={this.showModal}\n              editProjectDetail={this.setEditingProjectDetail}\n            />\n          </div>\n\n          <div className=\"workspace__main--sidebar\">\n            <NodesListBar\n              isShowing={this.isShowingToolbar}\n              navigateTo={routingStore.push}\n              publishTemplate={templatesStore.publishTemplate}\n              nodes={NODES}\n              graphxUUID={this.graphxInstanceUUID}\n            />\n\n            {\n              this.isShowingNodeDetail ?\n                <DetailSettingBar\n                  node={rulesStore.getCurrentNode}\n                  findNodeById={rulesStore.findNodeById}\n                  updateNodeTransformerSetting={\n                    rulesStore.updateNodeTransformerSetting\n                  }\n                  updateNodeDetailSetting={rulesStore.updateNodeDetailSetting}\n                />:\n                null\n            }\n\n            {\n               this.isShowingPredictionDetail ?\n                <PredictionDetailsPanel\n                  project={ rulesStore.currentProject }\n                  update={ projectStore.update }\n                  delete={ projectStore.delete }\n                  navigateTo={ routingStore.push }\n                  editProjectDetail={this.setEditingProjectDetail}\n                />:\n                null\n            }\n          </div>\n        </section>\n\n        {!!this.showPublishTemplateModal ? (\n          <PublishTemplateModal\n            closeModal={this.closeModal}\n            navigateTo={routingStore.push}\n            publishTemplate={templatesStore.publishTemplate}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  @action\n  closeModal = () => {\n    this.showPublishTemplateModal = false;\n  };\n\n  @action\n  showModal = () => {\n    this.showPublishTemplateModal = true;\n  };\n\n  @action\n  setEditingProjectDetail = (isEditing) => {\n    this.isEditingProjectDetail = isEditing;\n  }\n\n  @computed\n  get isShowingPredictionDetail() {\n    return this.isEditingProjectDetail;\n  }\n\n  @computed\n  get isShowingNodeDetail() {\n    const { getCurrentNode, currentNodeId } = this.props.rulesStore;\n    return !this.isEditingProjectDetail && !!getCurrentNode;\n  }\n\n  @computed\n  get isShowingToolbar() {\n    const { currentNodeId, currentProject } = this.props.rulesStore;\n    return !this.isEditingProjectDetail && !currentNodeId;\n  }\n\n  initGraphx() {\n    const { rulesStore, projectStore } = this.props;\n    window[this.graphxInstanceUUID] = new GraphX(\n      document.querySelector(\"#workflow-canvas\"),\n      document.querySelector(\"#workflow-toolbar\"),\n      rulesStore.addNewNode,\n      rulesStore.updateLayouts,\n      rulesStore.connectNodes,\n      rulesStore.selectNode,\n      rulesStore.removeNodes\n    );\n\n    projectStore.setGraphXClient(window[this.graphxInstanceUUID]);\n\n    if (rulesStore.layouts.length > 0) {\n      window[this.graphxInstanceUUID].render({ layouts: rulesStore.layouts });\n    }\n  }\n\n  _getProjectId = () => {\n    const match = matchPath(this.props.routingStore.location.pathname, {\n      path: '/prediction/:id',\n      strict: true\n    });\n    return match && match.params.id;\n  }\n};\n\nexport default Workspace;\n","import React, { Component } from \"react\";\nimport { inject, observer } from \"mobx-react\";\n\nimport moment from \"moment\";\n\nimport \"./index.less\";\n\n@inject(\"routingStore\", \"projectStore\")\n@observer\nclass Projects extends Component {\n  render() {\n    const { projects } = this.props.projectStore;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"projects__toolbar\">\n          <input\n            className=\"projects__toolbar--search-column\"\n            placeholder=\"Search\"\n          />\n          <div\n            className=\"projects__toolbar--create-btn\"\n            onClick={this.newProject}\n          >\n            Create Project\n          </div>\n        </div>\n\n        <table className=\"projects__list\">\n          <colgroup>\n            <col style={{ width: \"16%\", minWidth: \"16%\" }} />\n          </colgroup>\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Status</th>\n              <th>Last run</th>\n              <th>Creation date</th>\n              <th>Owner</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {!projects || projects.length == 0 ? (\n              <tr className=\"empty\">\n                <div className=\"empty-placeholder-block\">\n                  <div className=\"create-link\" onClick={this.newProject}>\n                    Create Project\n                  </div>\n                  <div className=\"empty-placeholder\">\n                    You don’t have any project yet. start your prediction\n                    project\n                  </div>\n                </div>\n              </tr>\n            ) : null}\n\n            {projects.map((p) => (\n              <tr\n                className=\"projects__list--item\"\n                key={p.id}\n                onClick={this.navigateToProjectDetailPage(p.id)}\n              >\n                <th>\n                  <div className=\"projects__list--project-name\">\n                    {p.project.name}\n                  </div>\n\n                  <div className=\"projects__list--project-desc\">\n                    {p.project.description}\n                  </div>\n                </th>\n\n                <th>\n                  <div className=\"projects__list--status-bar-bg\">\n                    <div\n                      className=\"projects__list--status-bar-process processing\"\n                      style={{ width: \"56%\" }}\n                    />\n                  </div>\n\n                  <div className=\"projects__list--status-bar-info\">\n                    Running (1h 11min)\n                  </div>\n                </th>\n\n                <th>\n                  <div className=\"projects__list--date\">\n                    {moment(p.project.lastRun).format(\"MM-DD-YYYY\")}\n                  </div>\n                  <div className=\"projects__list--time\">\n                    {moment(p.project.lastRun).format(\"hh:mm\")}\n                  </div>\n                </th>\n\n                <th>\n                  <div className=\"projects__list--date\">\n                    {moment(p.project.createdTime).format(\"MM-DD-YYYY\")}\n                  </div>\n                  <div className=\"projects__list--time\">\n                    {moment(p.project.createdTime).format(\"hh:mm\")}\n                  </div>\n                </th>\n\n                <th>\n                  <div className=\"projects__list--owner-avatar\" />\n                  <div className=\"projects__list--owner-name\">\n                    {p.project.creatorName}\n                  </div>\n                </th>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  newProject = () => {\n    this.props.routingStore.push(\"/predictions/new\");\n  };\n\n  navigateToProjectDetailPage = (projectId) => () => {\n    this.props.routingStore.push(`/prediction/${projectId}`);\n  };\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\n\nimport { GraphX, stringifyWithoutCircular } from '../../lib/MxGraphUtils.js';\n\nimport { Select } from 'antd';\nconst { Option } = Select;\n\nimport './index.less';\n\n@inject('routingStore', 'templatesStore', 'projectStore')\n@observer\nclass Templates extends Component {\n  componentDidMount = () => {\n    this.init();\n  }\n\n  init = () => {\n    this.graphx = new GraphX(document.querySelector('.templates__canvas--container'));\n    this.graphx.render(this.props.templatesStore.currentTemplate);\n  }\n\n  render() {\n    const { templatesStore, projectStore } = this.props;\n\n    return (\n      <div className=\"templates\">\n        <div className=\"templates__project-detail-panel\">\n          <div className=\"templates__project-detail-panel--panel-label\">Project details</div>\n\n          <div className=\"templates__project-detail-panel--form-label\">Project name</div>\n          <input className=\"templates__project-detail-panel--form-input\" ref=\"projectName\" placeholder=\"project name\" />\n\n          <div className=\"templates__project-detail-panel--form-label\">Description</div>\n          <textarea className=\"templates__project-detail-panel--form-textarea\" ref=\"projectDesc\" placeholder=\"description...\" />\n\n          <div className=\"templates__project-detail-panel--form-label\">Tempaltes</div>\n          <Select\n            className=\"templates__project-detail-panel--form-select\"\n            defaultValue={templatesStore.currentTemplate.id}\n            onChange={this.previewTemplate}\n            style={{ width: '100%' }}\n            placeholder=\"Select a template\"\n            size=\"large\"\n          >\n            {\n              templatesStore.templates.map((t) => (\n                <Option key={t.id} value={t.id}>{t.name}</Option>\n              ))\n            }\n          </Select>\n\n          <div className=\"templates__project-detail-panel--btns-group\">\n            <div className=\"templates__project-detail-panel--btn cancel\" onClick={ this.cancel }>Cancel</div>\n            <div className=\"templates__project-detail-panel--btn create\" onClick={ this.create }>Create project</div>\n          </div>\n        </div>\n\n        <div className=\"templates__info-container\">\n          <div className=\"templates__detail-info\">\n            <div className=\"templates__detail-info--label\">Template details</div>\n\n            <div className=\"templates__detail-info--name\">Default template</div>\n\n            <div className=\"templates__detail-info--desc\">\n              This is a typical template that is created to handle simple prediction tasks.\n            </div>\n\n            <div>\n              <div className=\"templates__detail-info--info-block\">\n                <label>Users segment:</label>\n                <span>All</span>\n              </div>\n\n              <div className=\"templates__detail-info--info-block\">\n                <label>Weeks of training data:</label>\n                <span>26</span>\n              </div>\n\n              <div className=\"templates__detail-info--info-block\">\n                <label>Prediction Label:</label>\n                <span>Label_name</span>\n              </div>\n\n              <div className=\"templates__detail-info--info-block\">\n                <label>Project type:</label>\n                <span className=\"highlight\">Binary classification</span>\n              </div>\n\n              <div className=\"templates__detail-info--info-block\">\n                <label>Created by:</label>\n                <span>User #1</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"templates__canvas\">\n            <div className=\"templates__canvas--container\" />\n            <div className=\"templates__canvas--layer\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  cancel = () => {\n    this.props.routingStore.push('/projects');\n  }\n\n  create = () => {\n    const { projectName, projectDesc } = this.refs;\n    this.props.projectStore.create({\n      name: projectName.value,\n      description: projectDesc.value,\n      projectType: \"BinaryClassification\",\n    }, (project) => {\n      this.props.routingStore.push(`/prediction/${project.id}`);\n    });\n\n    // this.props.templatesStore.copyTemplate();\n  }\n\n  previewTemplate = (templateId) => {\n    const template = this.props.templatesStore.templates.find(t => t.id == templateId)\n    this.props.templatesStore.previewTemplate(template);\n    this.graphx.render(template);\n  }\n}\n\nexport default Templates;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AlertBar from '../AlertBar';\n\nimport './index.less';\n\nclass VisualizedLabelDefinition extends Component {\n  render() {\n    const { queries, selectedFilterId } = this.props;\n    const { deleteFilter, duplicateFilter, selectFilter, addEmptyFilter } = this.props;\n\n    return (\n      <div className=\"label-definition\">\n        <div className=\"label-definition__header\">\n          <div className=\"label-definition__header--left-block\">\n            <div className=\"label-definition__header--project-name\">Project #1</div>\n          </div>\n\n          <div className=\"label-definition__header--right-block\">\n            <div className=\"label-definition__header--btn-group disabled\">\n              Train\n            </div>\n          </div>\n        </div>\n\n        <div className=\"label-definition__alert-bar\">\n          <AlertBar\n            title='Project created'\n            desc='To start creating your workflow, drag and drop any of the objects from the workflow toolbox.'\n            type='succeed'\n          />\n        </div>\n\n        <div className=\"label-definition__container with-alert\">\n          <div>\n            {\n              Object.keys(queries).map((t, ti) => {\n                return (\n                  <div className=\"label-definition__logic-table\" key={`table-${ti}`}>\n                    <div className=\"label-definition__logic-column\">\n                      <div className=\"label-definition__logic-item table\">{ t }</div>\n                    </div>\n\n                    <div className=\"label-definition__logic-column\">\n                      {\n                        queries[t].map((f, fi) => {\n                          return (\n                            <div className={`label-definition__logic-row ${ f.logicOperator }`} key={`row-${fi}`}>\n                              <div className=\"label-definition__logic-block\">\n                                <div className={`label-definition__logic-item ${f.conditions[0].aggregation || \"filter\"}`}>\n                                  { `${f.conditions[0].columnName} ${f.conditions[0].operator} ${f.conditions[0].value}` }\n                                </div>\n\n                                {\n                                  f.conditions.slice(1, f.conditions.length).map((c, ci) => {\n                                    return (\n                                      <div className={`label-definition__logic-row ${ c.logicOperator }`} key={`row-sub-${ci}`}>\n                                        <div className={`label-definition__logic-item ${ c.aggregation || \"filter\" } `}>\n                                          { `${c.columnName} ${c.operator} ${c.value}` }\n                                        </div>\n                                      </div>\n                                    );\n                                  })\n                                }\n                              </div>\n                              <div className=\"label-definition__hover-layer\">\n                                <div className={`label-definition__hover-layer--container ${ selectedFilterId == f.id ? \"selected\" : \"\" }`}>\n                                  <div className=\"label-definition__hover-layer--toolbar\">\n                                    <i className=\"iconfont iconcopy\" onClick={ duplicateFilter(f.id) } />\n                                    <i className=\"iconfont icondelete\" onClick={ deleteFilter(f.id) } />\n                                    <i className=\"iconfont iconpencil\" onClick={ selectFilter(f.id) } />\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        })\n                      }\n                    </div>\n                  </div>\n                );\n              })\n            }\n          </div>\n\n          <div className=\"label-definition__container--add-filter\" onClick={ addEmptyFilter }>\n            <i className=\"iconfont iconplus\" />\n            Add filter\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nVisualizedLabelDefinition.propTypes = {\n  queries: PropTypes.object.isRequired,\n  deleteFilter: PropTypes.func.isRequired,\n  duplicateFilter: PropTypes.func.isRequired,\n  selectFilter: PropTypes.func.isRequired,\n  selectedFilterId: PropTypes.number,\n  addEmptyFilter: PropTypes.func.isRequired,\n};\n\nexport default VisualizedLabelDefinition;\n","import React, { Component } from 'react';\n\nimport { Menu, Dropdown } from 'antd';\n\nimport './index.less';\n\nexport default class DefinePrediction extends Component {\n  render() {\n    return (\n      <div className=\"define-prediction\">\n        <div className=\"define-prediction__label\">Define prediction</div>\n        <div className=\"define-prediction__desc\">\n          Predicition are predefined labels. Please select from the list below or create a new one.\n        </div>\n\n        <Dropdown overlay={ this._renderOperations() }  trigger={['click']}>\n          <div className=\"define-prediction__select-panel\">\n            <div className=\"define-prediction__select-panel--value\">\n              Load prediction label\n            </div>\n            <div className=\"define-prediction__select-panel--icon\">\n              <i className=\"iconfont iconvector-down\" />\n            </div>\n          </div>\n        </Dropdown>\n\n        <div className=\"define-prediction__add-btn\">\n          <i className=\"iconfont iconplus\" />\n          Add prediciton label\n        </div>\n      </div>\n    );\n  }\n\n  _renderOperations = () => (\n    <Menu>\n      <Menu.Item key=\"test\">\n        Test\n      </Menu.Item>\n      <Menu.Item key=\"some\">\n        Some\n      </Menu.Item>\n    </Menu>\n  )\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Menu, Dropdown } from 'antd';\n\nimport './index.less';\n\nconst aggFuncOptions = {\n  \"filter\": \"No aggregate function\",\n  \"sum\": \"SUM\",\n};\n\nconst operatorOptions = {\n  \"in\": \"In\",\n  \"between\": \"Between\",\n  \"==\": \"Equal to\",\n  \">=\": \"Greater than or equal to\",\n  \">\": \"Greater than\",\n  \"<=\": \"Less than or equal to\",\n  \"<\": \"Less than\",\n};\n\nexport default class AddPredictionLabel extends Component {\n  render() {\n    const { selectedFilter, cancelEdit, addEmptyCondition, cancelEmptyCondition } = this.props;\n\n    return (\n      <div className=\"add-prediction-label\">\n        <div className=\"add-prediction-label__label\">Add new prediction label</div>\n        <div className=\"add-prediction-label__form-block\">\n          <div className=\"add-prediction-label__form-block--label\">Name</div>\n          <input className=\"add-prediction-label__form-block--input\" placeholder=\"Enter a name for this label\" />\n        </div>\n\n        <div className=\"add-prediction-label__form-block\">\n          <div className=\"add-prediction-label__form-block--label\">Table</div>\n\n          <Dropdown overlay={ this._renderTableOptions(0) }  trigger={['click']}>\n            <div className=\"add-prediction-label__form-block--select\">\n              <div className=\"add-prediction-label__form-block--select-value\">\n                { selectedFilter.tableName || \"Select table\" }\n              </div>\n              <div className=\"add-prediction-label__form-block--select-icon\">\n                <i className=\"iconfont iconvector-down\" />\n              </div>\n            </div>\n          </Dropdown>\n        </div>\n\n        <div className=\"add-prediction-label__form-block\">\n          <div className=\"add-prediction-label__form-block--label\">Column</div>\n\n          <Dropdown overlay={ this._renderColumnOptions(0) }  trigger={['click']}>\n            <div className=\"add-prediction-label__form-block--select\">\n              <div className=\"add-prediction-label__form-block--select-value\">\n                { (selectedFilter && selectedFilter.conditions[0].columnName) || \"Select column\" }\n              </div>\n              <div className=\"add-prediction-label__form-block--select-icon\">\n                <i className=\"iconfont iconvector-down\" />\n              </div>\n            </div>\n          </Dropdown>\n\n          <Dropdown overlay={ this._renderAggFuncOptions(0) }  trigger={['click']}>\n            <div className=\"add-prediction-label__form-block--select\">\n              <div className=\"add-prediction-label__form-block--select-value\">\n                { (selectedFilter && selectedFilter.conditions[0]) ? (aggFuncOptions[selectedFilter.conditions[0].aggregate] || \"filter\") : \"SUM\" }\n              </div>\n              <div className=\"add-prediction-label__form-block--select-icon\">\n                <i className=\"iconfont iconvector-down\" />\n              </div>\n            </div>\n          </Dropdown>\n\n          <Dropdown overlay={ this._renderOperatorOptions(0) }  trigger={['click']}>\n            <div className=\"add-prediction-label__form-block--select\">\n              <div className=\"add-prediction-label__form-block--select-value\">\n                { (selectedFilter && selectedFilter.conditions[0]) ? operatorOptions[selectedFilter.conditions[0].operator] : \"Equal to\" }\n              </div>\n              <div className=\"add-prediction-label__form-block--select-icon\">\n                <i className=\"iconfont iconvector-down\" />\n              </div>\n            </div>\n          </Dropdown>\n\n          <input className=\"add-prediction-label__form-block--input\" placeholder=\"Value\" value={ selectedFilter && selectedFilter.conditions[0].value } onChange={ this.setValue } />\n        </div>\n\n        {\n          selectedFilter && selectedFilter.conditions.length > 1 ?\n            selectedFilter.conditions.slice(1, selectedFilter.conditions.length).map((c, cIdx) => (\n              <div key={cIdx}>\n                <div className=\"add-prediction-label__form-block\">\n                  <div className=\"add-prediction-label__form-block--select disabled\">\n                    <div className=\"add-prediction-label__form-block--select-value\">\n                      OR\n                    </div>\n                    <div className=\"add-prediction-label__form-block--select-icon\">\n                      <i className=\"iconfont iconvector-down\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"add-prediction-label__form-block\">\n                  <div className=\"add-prediction-label__form-block--label\">Column</div>\n                  <Dropdown overlay={ this._renderColumnOptions(cIdx+1) }  trigger={['click']}>\n                    <div className=\"add-prediction-label__form-block--select\">\n                      <div className=\"add-prediction-label__form-block--select-value\">\n                        { c.columnName || \"Select column\" }\n                      </div>\n                      <div className=\"add-prediction-label__form-block--select-icon\">\n                        <i className=\"iconfont iconvector-down\" />\n                      </div>\n                    </div>\n                  </Dropdown>\n\n                  <Dropdown overlay={ this._renderAggFuncOptions(cIdx + 1) }  trigger={['click']}>\n                    <div className=\"add-prediction-label__form-block--select\">\n                      <div className=\"add-prediction-label__form-block--select-value\">\n                        { c.agregation || \"No aggregate func\" }\n                      </div>\n                      <div className=\"add-prediction-label__form-block--select-icon\">\n                        <i className=\"iconfont iconvector-down\" />\n                      </div>\n                    </div>\n                  </Dropdown>\n\n                  <Dropdown overlay={ this._renderOperatorOptions(cIdx + 1) }  trigger={['click']}>\n                    <div className=\"add-prediction-label__form-block--select\">\n                      <div className=\"add-prediction-label__form-block--select-value\">\n                        { c.operator || \"==\" }\n                      </div>\n                      <div className=\"add-prediction-label__form-block--select-icon\">\n                        <i className=\"iconfont iconvector-down\" />\n                      </div>\n                    </div>\n                  </Dropdown>\n\n                  <input className=\"add-prediction-label__form-block--input\" placeholder=\"Value\" value={ c.value } />\n                </div>\n              </div>\n            )):\n            null\n        }\n\n        <div className=\"add-prediction-label__add-btn\" onClick={ addEmptyCondition }>\n          <i className=\"iconfont iconplus\" />\n          Add condition\n        </div>\n\n        <div className=\"add-prediction-label__btn-group\">\n          <div className=\"add-prediction-label__btn-group--btn cancel\" onClick={ cancelEdit }>Cancel</div>\n          <div className=\"add-prediction-label__btn-group--btn confirm\">Add filter</div>\n        </div>\n      </div>\n    );\n  }\n\n  _renderTableOptions = () => (\n    <Menu onClick={ this.chooseTable }>\n      <Menu.Item key=\"Orders\">\n        Orders\n      </Menu.Item>\n      <Menu.Item key=\"Products\">\n        Products\n      </Menu.Item>\n      <Menu.Item key=\"Users\">\n        Users\n      </Menu.Item>\n    </Menu>\n  );\n\n  _renderColumnOptions = (cIdx) => (\n    <Menu onClick={ this.chooseColumn(cIdx) }>\n      <Menu.Item key=\"Order_date\">\n        Order_date\n      </Menu.Item>\n      <Menu.Item key=\"purchase\">\n        purchase\n      </Menu.Item>\n      <Menu.Item key=\"Status\">\n        Status\n      </Menu.Item>\n      <Menu.Item key=\"Name\">\n        Name\n      </Menu.Item>\n      <Menu.Item key=\"Version\">\n        Version\n      </Menu.Item>\n    </Menu>\n  );\n\n  _renderAggFuncOptions = (cIdx) => (\n    <Menu onClick={ this.chooseAggFunc(cIdx) }>\n      {\n        Object.keys(aggFuncOptions).map((k) => (\n          <Menu.Item key={k}>\n            { aggFuncOptions[k] }\n          </Menu.Item>\n        ))\n      }\n    </Menu>\n  );\n\n  _renderOperatorOptions = (cIdx) => (\n    <Menu onClick={ this.chooseOperator(cIdx) }>\n      {\n        Object.keys(operatorOptions).map((k) => (\n          <Menu.Item key={k}>\n            { operatorOptions[k] }\n          </Menu.Item>\n        ))\n      }\n    </Menu>\n  );\n\n  chooseTable = (e) => {\n    this.props.updateTable(e.key);\n  }\n\n  chooseAggFunc = (cIdx) => (e) => {\n    this.props.updateFilter(\"aggregation\", cIdx, e.key);\n  }\n\n  chooseColumn = (cIdx) => (e) => {\n    this.props.updateFilter(\"columnName\", cIdx, e.key);\n  }\n\n  chooseOperator = (cIdx) => (e) => {\n    this.props.updateFilter(\"operator\", cIdx, e.key);\n  }\n\n  setValue = (cIdx) => (e) => {\n    this.props.updateFilter(\"value\", cIdx, e.key);\n  }\n};\n\nAddPredictionLabel.propTypes = {\n  selectedRow: PropTypes.array,\n  cancelEdit: PropTypes.func.isRequird,\n  addEmptyCondition: PropTypes.func.isRequired,\n  cancelEmptyCondition: PropTypes.func.isRequired,\n  updateTable: PropTypes.func.isRequired,\n  updateCondition: PropTypes.func.isRequired,\n  updateFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { makeObservable, observable, action } from 'mobx';\n\nimport VisualizedLabelDefinition from '../../components/VisualizedLabelDefinition';\nimport DefinePrediction from '../../components/DefinePrediction';\nimport AddPredictionLabel from '../../components/AddPredictionLabel';\n\nimport './index.less';\n\n@inject('queriesStore')\n@observer\nclass Labels extends Component {\n  render() {\n    const { queriesStore } = this.props;\n\n    return (\n      <div className=\"labels\">\n        <section className=\"labels__main\">\n          <div className=\"labels__main--content\">\n            <VisualizedLabelDefinition\n              queries={ queriesStore.parsedQueries }\n              deleteFilter={ queriesStore.deleteFilter }\n              duplicateFilter={ queriesStore.duplicateFilter }\n              selectFilter={ queriesStore.selectFilter }\n              selectedFilterId={ queriesStore.selectedFilterId }\n              addEmptyFilter={ queriesStore.addEmptyFilter }\n            />\n          </div>\n\n          <div className=\"labels__main--sidebar\">\n            {\n              queriesStore.selectedFilterId != null ?\n                <AddPredictionLabel\n                  selectedFilter={ queriesStore.selectedFilter }\n                  cancelEdit={ queriesStore.cancelEdit }\n                  addEmptyCondition={ queriesStore.addEmptyCondition }\n                  cancelEmptyCondition={ queriesStore.cancenlEmptyCondition }\n                  updateTable={ queriesStore.updateTable }\n                  updateCondition={ queriesStore.updateCondition }\n                  updateFilter={ queriesStore.updateFilter }\n                />:\n                <DefinePrediction\n                />\n            }\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Labels;\n","import React from \"react\";\nimport { Form, Input, Select, Checkbox, Button } from \"antd\";\n\nconst FormItem = Form.Item;\nconst SelectOption = Select.Option;\n\nconst PersonForm = (props) => {\n  const [form] = Form.useForm();\n\n  const handleFinsh = (values) => {\n    props.onFinish(values);\n    console.log(values);\n    form.resetFields();\n  };\n\n  const initialValues = {\n    role: \"dataScientist\",\n  };\n\n  return (\n    <div className=\"person-form-container\">\n      <div className=\"caption\">Add person</div>\n      <Form\n        className=\"person-form\"\n        form={form}\n        layout=\"vertical\"\n        onFinish={handleFinsh}\n        initialValues={initialValues}\n      >\n        <FormItem name=\"name\" label=\"Name\" rules={[{ required: true }]}>\n          <Input placeholder=\"Enter user name\" />\n        </FormItem>\n        <FormItem\n          name=\"email\"\n          label=\"Email\"\n          rules={[{ required: true, type: \"email\" }]}\n        >\n          <Input placeholder=\"Enter user email\" />\n        </FormItem>\n        <FormItem name=\"role\" label=\"Role\" rules={[{ required: true }]}>\n          <Select placeholder=\"Select user role\">\n            <SelectOption value=\"dataScientist\">Data Scientist</SelectOption>\n            <SelectOption value=\"businessUser\">Bussiness User</SelectOption>\n          </Select>\n        </FormItem>\n        <FormItem name=\"admin\" valuePropName=\"checked\">\n          <Checkbox>Make admin</Checkbox>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Add person\n          </Button>\n        </FormItem>\n      </Form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\nimport { Form, Select, Button, Input } from \"antd\";\n\nconst FormItem = Form.Item;\nconst SelectOption = Select.Option;\n\nconst DataSourceForm = (props) => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    props.onFinish(values);\n    form.resetFields();\n  };\n\n  const initialValues = {\n    type: \"mysql\",\n  };\n\n  return (\n    <div className=\"data-source-form-container\">\n      <div className=\"caption\">Add data source</div>\n      <Form\n        form={form}\n        className=\"data-source-form\"\n        layout=\"vertical\"\n        onFinish={onFinish}\n        initialValues={initialValues}\n      >\n        <FormItem name=\"type\" label=\"Data source type\">\n          <Select>\n            <SelectOption value=\"mysql\">MySQL</SelectOption>\n            <SelectOption value=\"postgres\">PostgreSQL</SelectOption>\n          </Select>\n        </FormItem>\n        <FormItem name=\"name\" label=\"Name\">\n          <Input placeholder=\"Enter data source name\" />\n        </FormItem>\n        <FormItem name=\"host\" label=\"Host\">\n          <Input placeholder=\"Enter data source host\" />\n        </FormItem>\n        <FormItem name=\"port\" label=\"Port\">\n          <Input placeholder=\"Enter data source port\" />\n        </FormItem>\n        <FormItem name=\"database\" label=\"Database name\">\n          <Input placeholder=\"Enter database name\" />\n        </FormItem>\n        <FormItem name=\"username\" label=\"Username\">\n          <Input placeholder=\"Enter database username\" />\n        </FormItem>\n        <FormItem name=\"password\" label=\"Password\">\n          <Input type=\"password\" placeholder=\"Enter database password\" />\n        </FormItem>\n        <FormItem>\n          <Button>Test connectivity</Button>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Add data source\n          </Button>\n        </FormItem>\n      </Form>\n    </div>\n  );\n};\n\nexport default DataSourceForm;\n","import React from 'react'\n\nfunction AccountDetail() {\n  return (\n    <div className='account-detail-panel'>\n      Account Detail\n    </div>\n  )\n}\n\nexport default AccountDetail\n","import React from \"react\";\nimport { MoreOutlined, StarFilled } from \"@ant-design/icons\";\nimport { Dropdown, Menu } from \"antd\";\n\nconst MenuItem = Menu.Item;\n\nconst Person = ({ data }) => {\n  const menu = (\n    <Menu>\n      <MenuItem>Disable</MenuItem>\n    </Menu>\n  );\n\n  const dropdown = (\n    <Dropdown overlay={menu} trigger={[\"click\"]}>\n      <MoreOutlined />\n    </Dropdown>\n  );\n\n  return (\n    <div className=\"person\">\n      <div className=\"person__admin-indicator\">\n        {data.admin ? <StarFilled /> : null}\n      </div>\n      <div className=\"person__avatar-wrapper\">\n        <img\n          src={data.avatarUrl || \"https://i.pravatar.cc/32\"}\n          alt={data.name}\n        />\n      </div>\n      <div className=\"person__body\">\n        <div className=\"name\">{data.name}</div>\n        <div className=\"role\">{data.role}</div>\n        <div className=\"joined-at\">{data.joinedAt}</div>\n      </div>\n      <div className=\"action\">{dropdown}</div>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport { MoreOutlined, StarFilled } from \"@ant-design/icons\";\nimport { Dropdown, Menu } from \"antd\";\n\nconst MenuItem = Menu.Item;\n\nconst DataSource = ({ data }) => {\n  const menu = (\n    <Menu>\n      <MenuItem>Delete</MenuItem>\n    </Menu>\n  );\n\n  const dropdown = (\n    <Dropdown overlay={menu} trigger={[\"click\"]}>\n      <MoreOutlined />\n    </Dropdown>\n  );\n\n  return (\n    <div className=\"data-source\">\n      <div className=\"data-source__body\">\n        <div className=\"data-source__body__name\">{data.name}</div>\n        <div className=\"data-source__body__type\">{data.type}</div>\n        <div className=\"data-source__body__created-at\">Added: {data.creatdedAt}</div>\n      </div>\n      <div className=\"data-source__action\">\n        { dropdown }\n      </div>\n    </div>\n  );\n};\n\nexport default DataSource;\n","import React, { useState, useEffect } from 'react';\nimport { Tabs } from 'antd'\nimport { inject, observer } from 'mobx-react';\nimport PersonForm from './person-form';\nimport DataSourceForm from './data-source-form';\nimport AccountDetail from './account-detail';\nimport Person from './person';\nimport DataSource from './data-source';\nimport './index.less';\n\nconst TabPane = Tabs.TabPane;\n\nconst Admin = (props) => {\n  const [ currentTab, setCurrentTab ] = useState('people');\n\n  useEffect(() => {\n    props.adminStore.fetchUsers();\n    props.adminStore.fetchDataSources();\n  }, [])\n\n  const handleTabChange = (tabKey) => {\n    setCurrentTab(tabKey)\n  }\n\n  const handleAddPerson = (person) => {\n    props.adminStore.createUser(person)\n  }\n\n  const handleAddDataSource = (params) => {\n    props.adminStore.createDataSource(params)\n  }\n\n  let formContent = null;\n  if (currentTab === 'people') {\n    formContent = <PersonForm onFinish={handleAddPerson} />\n  } else if (currentTab === 'dataSource') {\n    formContent = <DataSourceForm onFinish={handleAddDataSource} />\n  } else if (currentTab === 'accountUsage') {\n    formContent = <AccountDetail />\n  }\n\n  return (\n    <div className=\"admin-container\">\n      <Tabs className=\"admin-container__tabs\" type=\"card\" onChange={handleTabChange}>\n        <TabPane key=\"people\" tab=\"People\">\n          { props.adminStore.users.map((p, i) => <Person key={i} data={p} />)}\n        </TabPane>\n        <TabPane key=\"dataSource\" tab=\"Data Source\">\n          { props.adminStore.dataSources.map((ds, i) => <DataSource key={i} data={ds} />)}\n        </TabPane>\n        <TabPane key=\"accountUsage\" tab=\"Account Usage\">\n        </TabPane>\n      </Tabs>\n      <div className='admin-container__sidebar'>\n        { formContent }\n      </div>\n    </div>\n  )\n}\n\nexport default inject('adminStore')(observer(Admin));","import React from \"react\";\nimport axios from \"axios\";\nimport { Form, Input, Button } from \"antd\";\nimport { inject, observer } from \"mobx-react\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.less\";\n\nconst FormItem = Form.Item;\n\nconst Login = (props) => {\n  const history = props.routingStore;\n  const [form] = Form.useForm();\n  const forgetPassword = (\n    <Link to=\"/forget-password\">I forgot my password</Link>\n  );\n\n  const handleLogin = (params) => {\n    let data = new FormData();\n    data.append(\"username\", params.email);\n    data.append(\"password\", params.password);\n    axios.post(\"/api/user/login\", data).then((res) => {\n      props.userStore.stompWebsocket.connect(() => {\n        props.userStore.signIn();\n        history.push(\"/\");\n      });\n    });\n  };\n\n  if (props.userStore.authed) {\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__left-panel\">\n        <div className=\"login__left-panel--logo\">\n          <img src=\"images/logo.png\" />\n        </div>\n\n        <div className=\"login__left-panel--slogan\">\n          Build predictions models, get all insights from your company data{\" \"}\n          <b>flexibly</b>.\n        </div>\n\n        <img className=\"login__left-panel--tree-bg\" src=\"images/tree.svg\" />\n        <div className=\"login__left-panel--lines-bg\" />\n        <div className=\"login__left-panel--bottom-lines-bg\" />\n\n        <div className=\"login__left-panel--footer\" />\n      </div>\n\n      <div className=\"login__right-panel\">\n        <div className=\"login__form-container\">\n          <div className=\"login__form-container__header\">\n            Login to your account\n          </div>\n\n          <Form\n            className=\"login__form-container__body\"\n            layout=\"vertical\"\n            requiredMark={\"optional\"}\n            form={form}\n            onFinish={handleLogin}\n          >\n            <FormItem label=\"Email\" name=\"email\" rules={[{ required: true }]}>\n              <Input placeholder=\"Enter your email\" />\n            </FormItem>\n            <FormItem\n              label=\"Password\"\n              name=\"password\"\n              rules={[{ required: true }]}\n              extra={forgetPassword}\n            >\n              <Input type=\"password\" placeholder=\"Enter your password\" />\n            </FormItem>\n            <FormItem>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Login\n              </Button>\n            </FormItem>\n          </Form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default inject(\"routingStore\", \"userStore\")(observer(Login));\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport AppHeader from \"./components/AppHeader\";\nimport Workspace from \"./containers/Workspace\";\nimport Projects from \"./containers/Projects\";\nimport Templates from \"./containers/Templates\";\nimport Labels from \"./containers/Labels\";\nimport Admin from \"./containers/Admin\";\nimport Login from \"./containers/Login\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <PrivateRoute path=\"/\">\n          <div className=\"modou-app\">\n            <AppHeader />\n            <section className=\"modou-app__body\">\n              <Switch>\n                <Route exact path=\"/predictions/new\">\n                  <Templates />\n                </Route>\n                <Route exact path=\"/prediction/:id\">\n                  <Workspace />\n                </Route>\n                <Route exact path=\"/labels\">\n                  <Labels />\n                </Route>\n                <Route exact path=\"/admin\">\n                  <Admin />\n                </Route>\n                <Route path=\"/\">\n                  <Projects />\n                </Route>\n              </Switch>\n            </section>\n          </div>\n        </PrivateRoute>\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport { Timer } from \"../utils/common\";\n\nclass TopicMessageCallback {\n  constructor(topic, callback) {\n    this.topic = topic;\n    this.callback = callback;\n  }\n}\n\nexport default class StompWebsocket {\n  constructor(endpoint) {\n    this.endpoint = endpoint;\n    this.messageCallbacks = [];\n    this.conn = null;\n    this.topics = [];\n    this.ref = 0;\n    this.connected = false;\n    this.rejoinTimer = null;\n    this.sendBuffer = [];\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   * @returns {string}\n   */\n  makeRef() {\n    let newRef = this.ref + 1;\n    if (newRef === this.ref) {\n      this.ref = 0;\n    } else {\n      this.ref = newRef;\n    }\n\n    return this.ref.toString();\n  }\n\n  connect(successCallback, errorCallback) {\n    if (this.conn & this.connected) return;\n    this.sock = SockJS(\"/stomp\");\n    this.conn = Stomp.over(this.sock);\n    this.conn.connect(\n      {},\n      () => {\n        this.onConnOpen();\n        successCallback && successCallback();\n      },\n      (error, other) => {\n        this.onConnClose(error);\n        errorCallback && errorCallback(error, other);\n      }\n    );\n  }\n\n  reconnect() {\n    // Any other stuffs should be cleaned up here?\n    this.connect();\n  }\n\n  disconnect() {\n    this.conn && this.conn.disconnect();\n  }\n\n  registerCallback(topic, callback) {\n    if (!this.topics.includes(topic)) {\n      this.topics.push(topic);\n    }\n    let messageCallback = new TopicMessageCallback(topic, (message) =>\n      callback(message)\n    );\n    this.messageCallbacks.push(messageCallback);\n  }\n\n  send(topic, headers = {}, message) {\n    if (this.connected) {\n      this.conn.send(topic, headers, message);\n    } else {\n      // start timer\n      this.rejoinTimer = new Timer(\n        () => {\n          if (this.connected) {\n            this.reconnect();\n          }\n        },\n        (tries) => {\n          return [1000, 3000, 5000, 10000][tries - 1] || 10000;\n        }\n      );\n      this.sendBuffer.push({ topic, message, headers });\n    }\n  }\n\n  onConnOpen() {\n    console.log(\"StompWebsocket connected!\");\n    this.connected = true;\n\n    if (this.rejoinTimer) {\n      this.rejoinTimer.reset();\n    }\n\n    // subscribe topics\n    this.topics.forEach((topic) => {\n      this.conn.subscribe(topic, this.onMessage.bind(this));\n    });\n\n    // flush send buffer\n    console.log(\"flushing send buffer...\");\n    this.sendBuffer.forEach(({ topic, message, headers }) => {\n      this.send(topic, headers, message);\n    });\n    this.sendBuffer = [];\n  }\n\n  onMessage(frame) {\n    const topic = frame.headers.destination;\n    const topicBindings = this.messageCallbacks.filter(\n      (mc) => mc.topic === topic\n    );\n    topicBindings.forEach((messageCallback) => {\n      messageCallback.callback(frame);\n    });\n  }\n\n  onConnClose(error) {\n    this.connected = false;\n    console.log(\"StompWebsocket closed!\");\n  }\n}\n","import { observable, action, computed, makeObservable } from 'mobx';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport NODES from '../constants/Nodes';\nimport { stringifyWithoutCircular } from '../lib/MxGraphUtils';\n\nexport default class RulesStore {\n  @observable currentProject = {};\n  @observable nodesMap = {};\n  @observable configs = [];\n  @observable currentNodeId = null;\n  @observable layouts = [];\n\n  constructor() {\n    makeObservable(this)\n  }\n\n  registerTopics(stompWebsocket) {\n    this.stompWebsocket = stompWebsocket;\n  }\n\n  @action\n  addNewNode = (key, id, name) => {\n    let node = { ...NODES[key].defaultTemplate, id, name };\n\n    this.nodesMap[id] = node;\n    this.configs.push(this.nodesMap[id]);\n\n    this._updateProject();\n  }\n\n  @action\n  selectNode = (id) => {\n    this.currentNodeId = id;\n  }\n\n  @action\n  connectNodes = (parentId, selfId) => {\n    let node = this.nodesMap[selfId];\n    node.parent = node.parent.concat([parentId]);\n\n    this._updateProject();\n  }\n\n  @action\n  removeNodes = (nodes) => {\n    nodes.forEach((node) => {\n      if (node.isEdge()) {\n        let childNode = this.nodesMap[node.target.id];\n        if (!!childNode) {\n          childNode.parent = childNode.parent.filter((p) => p != node.source.id);\n        }\n      } else {\n        this.configs = this.configs.filter((n) => n.id != node.id);\n      }\n    });\n  }\n\n  @action\n  updateNodeTransformerSetting = (excuteAt, configs) => {\n    let node = this.getCurrentNode;\n    node[\"transformer\"][excuteAt] = configs;\n\n    this._updateProject();\n  }\n\n  @action\n  updateNodeDetailSetting = (key, value) => {\n    let node = this.getCurrentNode;\n    node[key] = value;\n\n    this._updateProject();\n  }\n\n  @action\n  updateLayouts = (modelJson) => {\n    this.layouts = JSON.parse(stringifyWithoutCircular(modelJson));\n\n    this._updateProject();\n  }\n\n  @action\n  applyTemplate = (configs, layouts) => {\n    let uuidsMapping = {};\n    layouts.forEach((cell) => {\n      uuidsMapping[cell.id] = uuidv1();\n    });\n\n    this.configs = configs.map((rule) => {\n      return {\n        ...rule,\n        id: uuidsMapping[rule.id],\n        parent: rule.parent.map(p => uuidsMapping[p])\n      };\n    });\n\n    this.layouts = layouts.map((layout) => {\n      let newLayout = {\n        ...layout,\n        id: uuidsMapping[layout.id],\n        source: uuidsMapping[layout.source] || null,\n        target: uuidsMapping[layout.target] || null,\n      }\n\n      if (!!layout.edges) {\n        newLayout = {\n          ...newLayout,\n          edges: layout.edges.map(edge => (\n            {\n              ...edge,\n              id: uuidsMapping[edge.id],\n              source: uuidsMapping[edge.source],\n              target: uuidsMapping[edge.target]\n            }\n          ))\n        }\n      };\n\n      return newLayout;\n    });\n\n    this.configs.forEach(r => this.nodesMap[r.id] = r);\n  }\n\n  findNodeById = (id) => {\n    return this.nodesMap[id];\n  }\n\n  @computed\n  get getCurrentNode() {\n    return this.nodesMap[this.currentNodeId];\n  }\n\n  _updateProject = () => {\n    if (!!this.updateDebounce) {\n      clearTimeout(this.updateDebounce);\n    }\n    this.updateDebounce = setTimeout(() => {\n      this.stompWebsocket.send('/app/update_project', {}, JSON.stringify({\n        id: this.currentProject.id,\n        configs: this.configs.map((c) => {\n          return {\n            id: c.id,\n            name: c.name,\n            description: c.description,\n            nodeType: \"CalculateNode\",\n            config: JSON.stringify(c),\n          };\n        }),\n        layouts: this.layouts.map((l) => {\n          return {\n            id: l.id,\n            layout: JSON.stringify(l),\n          };\n        }),\n      }));\n      this.updateDebounce = null;\n    }, 300);\n  }\n}\n","const json = {\n    id: 1, // segment ID\n    name: \"Segment Example\",\n    description: \"Segment Description\",\n    audienceNumber: 12000,\n    createdTime: \"1616659922\",\n    updatedTime: \"1616659922\",\n    filters: [\n        { // Order_date between 12/01/2021 and 19/01/2021\n            id: 1, // filter ID\n            logicOperator: \"AND\", // 可以忽略\n            tableId: 1, // table Orders\n            tableName: \"orders\",\n            // 我理解这里表示与前一个Filter的逻辑关系，所以第一个Filter的logicOperator可以忽略\n            createdTime: \"1616659922\",\n            updatedTime: \"1616659922\",\n            conditions: [\n                {\n                    id: 1, // condition ID\n                    columnId: 1, // column Order_date\n                    columnName: \"order_date\",\n                    aggregation: null,\n                    operator: \"between\",\n                    value: \"12/01/2021,19/01/2021\",\n                    logicOperator: \"OR\", // 可以忽略\n                    // 我理解这里表示与前一个Condition的逻辑关系，所以第一个Condition的logicOperator可以忽略\n                    createdTime: \"1616659922\",\n                    updatedTime: \"1616659922\",\n                }\n            ]\n        },\n        { // Total purchase >= 1287\n            id: 2, // filter ID\n            logicOperator: \"AND\",\n            tableId: 1, // table Orders\n            tableName: \"orders\",\n            createdTime: \"1616659922\",\n            updatedTime: \"1616659922\",\n            conditions: [\n                {\n                    id: 2, // condition ID\n                    columnId: 2, // column purchase\n                    columnName: \"purchase\",\n                    aggregation: \"sum\",\n                    operator: \">=\",\n                    value: \"1287\",\n                    logicOperator: \"OR\", // 可以忽略\n                    createdTime: \"1616659922\",\n                    updatedTime: \"1616659922\",\n                }\n            ]\n        },\n        { // Status == Completed OR Status == Canceled\n            id: 3, // filter ID\n            logicOperator: \"AND\",\n            tableId: 1, // table Orders\n            tableName: \"orders\",\n            createdTime: \"1616659922\",\n            updatedTime: \"1616659922\",\n            conditions: [\n                {\n                    id: 3, // condition ID\n                    columnId: 3, // column status\n                    columnName: \"status\",\n                    aggregation: null,\n                    operator: \"==\",\n                    value: \"Completed\",\n                    logicOperator: \"OR\", // 可以忽略\n                    createdTime: \"1616659922\",\n                    updatedTime: \"1616659922\",\n                },\n                {\n                    id: 4, // condition ID\n                    columnId: 3, // column status\n                    columnName: \"status\",\n                    aggregation: null,\n                    operator: \"==\",\n                    value: \"Canceled\",\n                    logicOperator: \"OR\",\n                    createdTime: \"1616659922\",\n                    updatedTime: \"1616659922\",\n                }\n            ]\n        },\n        { // Name == iPhone\n            id: 4, // filter ID\n            logicOperator: \"AND\",\n            tableId: 2, // table Products\n            tableName: \"products\",\n            createdTime: \"1616659922\",\n            updatedTime: \"1616659922\",\n            conditions: [\n                {\n                    id: 5, // condition ID\n                    columnId: 4, // column name\n                    columnName: \"name\",\n                    aggregation: null,\n                    operator: \"==\",\n                    value: \"iPhone\",\n                    logicOperator: \"OR\", // 可以忽略\n                    createdTime: \"1616659922\",\n                    updatedTime: \"1616659922\",\n                }\n            ]\n        },\n        { // Version in (10,11,12)\n            id: 5, // filter ID\n            logicOperator: \"AND\",\n            tableId: 2, // table Products\n            tableName: \"products\",\n            createdTime: \"1616659922\",\n            updatedTime: \"1616659922\",\n            conditions: [\n                {\n                    id: 6, // condition ID\n                    columnId: 5, // column version\n                    columnName: \"version\",\n                    aggregation: null,\n                    operator: \"in\",\n                    value: \"10,11,12\",\n                    logicOperator: \"OR\", // 可以忽略\n                    createdTime: \"1616659922\",\n                    updatedTime: \"1616659922\",\n                }\n            ]\n        }\n    ]\n};\n\nexport default json;\n","import { observable, action, computed, makeObservable } from 'mobx';\nimport update from 'immutability-helper';\nimport { groupBy, cloneDeep } from 'lodash';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport json from '../label_logic.js';\n\nconst emptyFilter = {\n  logicOperator: \"AND\",\n  tableId: \"\",\n  tableName: \"\",\n  conditions: [\n    {\n      columnId: \"\",\n      columnName: \"\",\n      aggregation: \"\",\n      operator: \"\",\n      value: \"\",\n      logicOperator: \"OR\",\n    }\n  ]\n};\n\nexport default class QueriesStore {\n  @observable queries = json.filters;\n  @observable selectedFilterId = null;\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  @action\n  selectFilter = (filterId) => () => {\n    this.selectedFilterId = filterId;\n  }\n\n  @action\n  addEmptyFilter = () => {\n    const newFilterId = uuidv1();\n    this.queries.push({...cloneDeep(emptyFilter), id: newFilterId});\n\n    this.selectedFilterId = newFilterId;\n  }\n\n  @action\n  addEmptyCondition = () => {\n    const filterIdx = this.queries.map((f) => f.id).indexOf(this.selectedFilterId);\n\n    this.queries = update(this.queries, {\n      [filterIdx]: {\n        conditions: {\n          $push: [{\n            columndId: \"\",\n            columnName: \"\",\n            aggregation: \"\",\n            operator: \"\",\n            value: \"\",\n            logicOperator: \"OR\",\n          }]\n        }\n      }\n    });\n  }\n\n  @action\n  updateTable = (table) => {\n    this.queries = update(this.queries, {\n      [this.selectedFilterId]: {\n        tableName: {\n          $set: table\n        }\n      }\n    });\n  }\n\n  @action\n  updateFilter = (key, cIdx, value) => {\n    const filterIdx = this.queries.map((f) => f.id).indexOf(this.selectedFilterId);\n\n    this.queries = update(this.queries, {\n      [filterIdx]: {\n        conditions: {\n          [cIdx]: {\n            [key]: {\n              $set: value\n            }\n          }\n        }\n      }\n    });\n    console.error(this.queries);\n  }\n\n  @action\n  cancelEmptyCondition = () => {\n  }\n\n  @action\n  cancelEdit = () => {\n    this.selectedFilterId = null;\n  }\n\n  @action\n  deleteFilter = (filterId) => () => {\n    this.queries = this.queries.filter((f) => f.id != filterId);\n    this.selectedFilterId = null;\n  }\n\n  @action\n  duplicateFilter = (filterId) => () => {\n    const filter = this.queries.find((f) => f.id == filterId);\n    this.queries.push(cloneDeep({...filter, id: uuidv1()}));\n  }\n\n  @computed\n  get selectedTable() {\n    const table = this.queries[this.selectedRowTId];\n    return !!table ? table.table : null;\n  }\n\n  @computed\n  get selectedFilter() {\n    return this.queries.find((f) => f.id == this.selectedFilterId);\n  }\n\n  @computed\n  get parsedQueries() {\n    return groupBy(this.queries, (f) => f.tableName);\n  }\n}\n","import { observable, action, computed, makeObservable } from \"mobx\";\nimport axios from \"axios\";\n\nexport default class UserStore {\n  @observable userProfile = {\n    role: \"business_user\",\n  };\n\n  @observable loading = true;\n\n  @observable authed = false;\n\n  constructor() {\n    makeObservable(this);\n  }\n\n  test_authentication() {\n    return axios\n      .get(\"/stomp/info\")\n      .then((response) => {\n        this.signIn();\n      })\n      .catch((error) => {\n        if (error.response.status === 403) {\n          this.signOut();\n        }\n      });\n  }\n\n  registerTopics(stompWebsocket, topics) {\n    this.stompWebsocket = stompWebsocket;\n    topics.forEach((topic) => {\n      this.stompWebsocket.registerCallback(topic, (frame) =>\n        this.onStompMessage(frame)\n      );\n    });\n  }\n\n  onStompMessage = (message) => {};\n\n  @action\n  signIn() {\n    localStorage.setItem(\"authed\", true);\n    this.loading = false;\n    this.authed = true;\n  }\n\n  @action\n  signOut() {\n    localStorage.removeItem(\"authed\");\n    this.loading = false;\n    this.authed = false;\n  }\n}\n","const templates = [\n  {\n    \"id\": 0,\n    \"name\": \"Empty template\",\n    \"description\": \"Build from scratch\",\n    layouts: [],\n    configs: []\n  },\n  {\n    id: 1,\n    name: \"Test template\",\n    description: \"This is a test template.\",\n    layouts: [\n      {\n        \"value\": {\n          \"name\": \"Daffy Duck\"\n        },\n        \"geometry\": {\n          \"x\": 90,\n          \"y\": 60,\n          \"width\": 120,\n          \"height\": 30,\n          \"relative\": false,\n          \"TRANSLATE_CONTROL_POINTS\": true,\n          \"alternateBounds\": null,\n          \"sourcePoint\": null,\n          \"targetPoint\": null,\n          \"points\": null,\n          \"offset\": null\n        },\n        \"id\": \"2\",\n        \"vertex\": true,\n        \"connectable\": true,\n        \"parent\": \"1\",\n        \"source\": null,\n        \"target\": null,\n        \"edges\": [\n          {\n            \"value\": \"Edge\",\n            \"geometry\": {\n              \"x\": 0,\n              \"y\": 0,\n              \"width\": 0,\n              \"height\": 0,\n              \"relative\": true\n            },\n            \"id\": \"4\",\n            \"edge\": true,\n            \"parent\": \"1\",\n            \"source\": \"2\",\n            \"target\": \"3\",\n            \"mxObjectId\": \"mxCell#7\"\n          }\n        ],\n        \"mxObjectId\": \"mxCell#6\"\n      },\n      {\n        \"value\": {\n          \"name\": \"Bugs Bunny\"\n        },\n        \"geometry\": {\n          \"x\": 300,\n          \"y\": 60,\n          \"width\": 120,\n          \"height\": 30,\n          \"relative\": false,\n          \"TRANSLATE_CONTROL_POINTS\": true,\n          \"alternateBounds\": null,\n          \"sourcePoint\": null,\n          \"targetPoint\": null,\n          \"points\": null,\n          \"offset\": null\n        },\n        \"id\": \"3\",\n        \"vertex\": true,\n        \"connectable\": true,\n        \"parent\": \"1\",\n        \"source\": null,\n        \"target\": null,\n        \"edges\": [\n          {\n            \"value\": \"Edge\",\n            \"geometry\": {\n              \"x\": 0,\n              \"y\": 0,\n              \"width\": 0,\n              \"height\": 0,\n              \"relative\": true\n            },\n            \"id\": \"4\",\n            \"edge\": true,\n            \"parent\": \"1\",\n            \"source\": \"2\",\n            \"target\": \"3\",\n            \"mxObjectId\": \"mxCell#7\"\n          }\n        ],\n        \"mxObjectId\": \"mxCell#8\"\n      },\n      {\n        \"value\": \"Edge\",\n        \"geometry\": {\n          \"x\": 0,\n          \"y\": 0,\n          \"width\": 0,\n          \"height\": 0,\n          \"relative\": true\n        },\n        \"id\": \"4\",\n        \"edge\": true,\n        \"parent\": \"1\",\n        \"source\": \"2\",\n        \"target\": \"3\",\n        \"mxObjectId\": \"mxCell#7\"\n      },\n      {\n        \"value\": {\n          \"name\": \"Elmer Fudd\"\n        },\n        \"geometry\": {\n          \"x\": 90,\n          \"y\": 220,\n          \"width\": 120,\n          \"height\": 30,\n          \"relative\": false,\n          \"TRANSLATE_CONTROL_POINTS\": true,\n          \"alternateBounds\": null,\n          \"sourcePoint\": null,\n          \"targetPoint\": null,\n          \"points\": null,\n          \"offset\": null\n        },\n        \"id\": \"5\",\n        \"vertex\": true,\n        \"connectable\": true,\n        \"parent\": \"1\",\n        \"source\": null,\n        \"target\": null,\n        \"edges\": [\n          {\n            \"value\": \"Edge\",\n            \"geometry\": {\n              \"x\": 0,\n              \"y\": 0,\n              \"width\": 0,\n              \"height\": 0,\n              \"relative\": true\n            },\n            \"id\": \"7\",\n            \"edge\": true,\n            \"parent\": \"1\",\n            \"source\": \"5\",\n            \"target\": \"6\",\n            \"mxObjectId\": \"mxCell#10\"\n          }\n        ],\n        \"mxObjectId\": \"mxCell#9\"\n      },\n      {\n        \"value\": {\n          \"name\": \"Tasmanian Devil\"\n        },\n        \"geometry\": {\n          \"x\": 300,\n          \"y\": 220,\n          \"width\": 120,\n          \"height\": 30,\n          \"relative\": false,\n          \"TRANSLATE_CONTROL_POINTS\": true,\n          \"alternateBounds\": null,\n          \"sourcePoint\": null,\n          \"targetPoint\": null,\n          \"points\": null,\n          \"offset\": null\n        },\n        \"id\": \"6\",\n        \"vertex\": true,\n        \"connectable\": true,\n        \"parent\": \"1\",\n        \"source\": null,\n        \"target\": null,\n        \"edges\": [\n          {\n            \"value\": \"Edge\",\n            \"geometry\": {\n              \"x\": 0,\n              \"y\": 0,\n              \"width\": 0,\n              \"height\": 0,\n              \"relative\": true\n            },\n            \"id\": \"7\",\n            \"edge\": true,\n            \"parent\": \"1\",\n            \"source\": \"5\",\n            \"target\": \"6\",\n            \"mxObjectId\": \"mxCell#10\"\n          }\n        ],\n        \"mxObjectId\": \"mxCell#11\"\n      },\n      {\n        \"value\": \"Edge\",\n        \"geometry\": {\n          \"x\": 0,\n          \"y\": 0,\n          \"width\": 0,\n          \"height\": 0,\n          \"relative\": true\n        },\n        \"id\": \"7\",\n        \"edge\": true,\n        \"parent\": \"1\",\n        \"source\": \"5\",\n        \"target\": \"6\",\n        \"mxObjectId\": \"mxCell#10\"\n      }\n    ],\n    configs: [\n      {\n        \"id\": \"18d77770-8038-11eb-a215-8d98119e5c42\",\n        \"name\": \"Align config\",\n        \"skip\": false,\n        \"comment\": \"load event with both daily and weekly timestamp.\",\n        \"accept\": [\n          \"feature\"\n        ],\n        \"transformer\": {\n          \"class\": \"AlignConfig\",\n          \"before\": {},\n          \"process\": {},\n          \"after\": {}\n        },\n        \"parent\": [],\n        \"persistent\": {}\n      },\n      {\n        \"id\": \"1b3823c0-8038-11eb-a215-8d98119e5c42\",\n        \"name\": \"Bucket config\",\n        \"skip\": false,\n        \"comment\": \"load event with both daily and weekly timestamp.\",\n        \"accept\": [\n          \"feature\"\n        ],\n        \"transformer\": {\n          \"class\": \"BucketConfig\",\n          \"before\": {},\n          \"process\": {\n            \"strategy\": \"QuantileDiscretizer\"\n          },\n          \"after\": {}\n        },\n        \"parent\": [],\n        \"persistent\": {}\n      },\n      {\n        \"id\": \"1f7a3a40-8038-11eb-a215-8d98119e5c42\",\n        \"name\": \"Fill defaults config\",\n        \"skip\": false,\n        \"comment\": \"load event with both daily and weekly timestamp.\",\n        \"accept\": [\n          \"feature\"\n        ],\n        \"transformer\": {\n          \"class\": \"FillDefaultsConfig\",\n          \"before\": {},\n          \"process\": {},\n          \"after\": {}\n        },\n        \"parent\": [\n          \"18d77770-8038-11eb-a215-8d98119e5c42\",\n          \"1b3823c0-8038-11eb-a215-8d98119e5c42\"\n        ],\n        \"persistent\": {}\n      }\n    ]\n  },\n  {\n    id: \"2\",\n    name: \"Default template\",\n    description: \"Generate default template\",\n    configs: [\n      {\n        \"id\": \"79046cf0-80f8-11eb-b536-9706ea4eeccc\",\n        \"name\": \"Align config\",\n        \"skip\": false,\n        \"comment\": \"load event with both daily and weekly timestamp.\",\n        \"accept\": [\n          \"feature\"\n        ],\n        \"transformer\": {\n          \"class\": \"AlignConfig\",\n          \"before\": {},\n          \"process\": {},\n          \"after\": {}\n        },\n        \"parent\": [],\n        \"persistent\": {}\n      },\n      {\n        \"id\": \"7bb2eb20-80f8-11eb-b536-9706ea4eeccc\",\n        \"name\": \"Fill defaults config\",\n        \"skip\": false,\n        \"comment\": \"load event with both daily and weekly timestamp.\",\n        \"accept\": [\n          \"feature\"\n        ],\n        \"transformer\": {\n          \"class\": \"FillDefaultsConfig\",\n          \"before\": {},\n          \"process\": {},\n          \"after\": {}\n        },\n        \"parent\": [\n          \"79046cf0-80f8-11eb-b536-9706ea4eeccc\"\n        ],\n        \"persistent\": {}\n      },\n      {\n        \"id\": \"7daf7e70-80f8-11eb-b536-9706ea4eeccc\",\n        \"name\": \"Bucket config\",\n        \"skip\": false,\n        \"comment\": \"load event with both daily and weekly timestamp.\",\n        \"accept\": [\n          \"feature\"\n        ],\n        \"transformer\": {\n          \"class\": \"BucketConfig\",\n          \"before\": {},\n          \"process\": {\n            \"strategy\": \"QuantileDiscretizer\"\n          },\n          \"after\": {}\n        },\n        \"parent\": [\n          \"7bb2eb20-80f8-11eb-b536-9706ea4eeccc\"\n        ],\n        \"persistent\": {}\n      }\n    ],\n    layouts: [\n      {\n        \"value\": \"Edge\",\n        \"geometry\": {\n          \"x\": 0,\n          \"y\": 0,\n          \"width\": 0,\n          \"height\": 0,\n          \"relative\": true\n        },\n        \"style\": null,\n        \"id\": \"7f12df00-80f8-11eb-b536-9706ea4eeccc\",\n        \"edge\": true,\n        \"parent\": \"1\",\n        \"source\": \"79046cf0-80f8-11eb-b536-9706ea4eeccc\",\n        \"target\": \"7bb2eb20-80f8-11eb-b536-9706ea4eeccc\",\n        \"mxObjectId\": \"mxCell#12\"\n      },\n      {\n        \"value\": \"Edge\",\n        \"geometry\": {\n          \"x\": 0,\n          \"y\": 0,\n          \"width\": 0,\n          \"height\": 0,\n          \"relative\": true\n        },\n        \"style\": null,\n        \"id\": \"80a7afd0-80f8-11eb-b536-9706ea4eeccc\",\n        \"edge\": true,\n        \"parent\": \"1\",\n        \"source\": \"7bb2eb20-80f8-11eb-b536-9706ea4eeccc\",\n        \"target\": \"7daf7e70-80f8-11eb-b536-9706ea4eeccc\"\n      },\n      {\n        \"value\": {\n          \"name\": \"Align config\"\n        },\n        \"geometry\": {\n          \"x\": 201,\n          \"y\": 105,\n          \"width\": 100,\n          \"height\": 40,\n          \"TRANSLATE_CONTROL_POINTS\": true,\n          \"alternateBounds\": null,\n          \"sourcePoint\": null,\n          \"targetPoint\": null,\n          \"points\": null,\n          \"offset\": null,\n          \"relative\": false\n        },\n        \"style\": \"shape=rounded\",\n        \"vertex\": true,\n        \"edge\": false,\n        \"connectable\": true,\n        \"visible\": true,\n        \"collapsed\": false,\n        \"mxTransient\": [\n          \"id\",\n          \"value\",\n          \"parent\",\n          \"source\",\n          \"target\",\n          \"children\",\n          \"edges\"\n        ],\n        \"id\": \"79046cf0-80f8-11eb-b536-9706ea4eeccc\",\n        \"parent\": \"1\",\n        \"source\": null,\n        \"target\": null,\n        \"mxObjectId\": \"mxCell#7\",\n        \"edges\": [\n          {\n            \"value\": \"Edge\",\n            \"geometry\": {\n              \"x\": 0,\n              \"y\": 0,\n              \"width\": 0,\n              \"height\": 0,\n              \"relative\": true\n            },\n            \"style\": null,\n            \"id\": \"7f12df00-80f8-11eb-b536-9706ea4eeccc\",\n            \"edge\": true,\n            \"parent\": \"1\",\n            \"source\": \"79046cf0-80f8-11eb-b536-9706ea4eeccc\",\n            \"target\": \"7bb2eb20-80f8-11eb-b536-9706ea4eeccc\",\n            \"mxObjectId\": \"mxCell#12\"\n          }\n        ]\n      },\n      {\n        \"value\": {\n          \"name\": \"Fill defaults config\"\n        },\n        \"geometry\": {\n          \"x\": 201,\n          \"y\": 227,\n          \"width\": 100,\n          \"height\": 40,\n          \"TRANSLATE_CONTROL_POINTS\": true,\n          \"alternateBounds\": null,\n          \"sourcePoint\": null,\n          \"targetPoint\": null,\n          \"points\": null,\n          \"offset\": null,\n          \"relative\": false\n        },\n        \"style\": \"shape=rounded\",\n        \"vertex\": true,\n        \"edge\": false,\n        \"connectable\": true,\n        \"visible\": true,\n        \"collapsed\": false,\n        \"mxTransient\": [\n          \"id\",\n          \"value\",\n          \"parent\",\n          \"source\",\n          \"target\",\n          \"children\",\n          \"edges\"\n        ],\n        \"id\": \"7bb2eb20-80f8-11eb-b536-9706ea4eeccc\",\n        \"parent\": \"1\",\n        \"source\": null,\n        \"target\": null,\n        \"mxObjectId\": \"mxCell#9\",\n        \"edges\": [\n          {\n            \"value\": \"Edge\",\n            \"geometry\": {\n              \"x\": 0,\n              \"y\": 0,\n              \"width\": 0,\n              \"height\": 0,\n              \"relative\": true\n            },\n            \"style\": null,\n            \"id\": \"7f12df00-80f8-11eb-b536-9706ea4eeccc\",\n            \"edge\": true,\n            \"parent\": \"1\",\n            \"source\": \"79046cf0-80f8-11eb-b536-9706ea4eeccc\",\n            \"target\": \"7bb2eb20-80f8-11eb-b536-9706ea4eeccc\",\n            \"mxObjectId\": \"mxCell#12\"\n          },\n          {\n            \"value\": \"Edge\",\n            \"geometry\": {\n              \"x\": 0,\n              \"y\": 0,\n              \"width\": 0,\n              \"height\": 0,\n              \"relative\": true\n            },\n            \"style\": null,\n            \"id\": \"80a7afd0-80f8-11eb-b536-9706ea4eeccc\",\n            \"edge\": true,\n            \"parent\": \"1\",\n            \"source\": \"7bb2eb20-80f8-11eb-b536-9706ea4eeccc\",\n            \"target\": \"7daf7e70-80f8-11eb-b536-9706ea4eeccc\"\n          }\n        ]\n      },\n      {\n        \"value\": {\n          \"name\": \"Bucket config\"\n        },\n        \"geometry\": {\n          \"x\": 203,\n          \"y\": 361,\n          \"width\": 100,\n          \"height\": 40,\n          \"TRANSLATE_CONTROL_POINTS\": true,\n          \"alternateBounds\": null,\n          \"sourcePoint\": null,\n          \"targetPoint\": null,\n          \"points\": null,\n          \"offset\": null,\n          \"relative\": false\n        },\n        \"style\": \"shape=rounded\",\n        \"vertex\": true,\n        \"edge\": false,\n        \"connectable\": true,\n        \"visible\": true,\n        \"collapsed\": false,\n        \"mxTransient\": [\n          \"id\",\n          \"value\",\n          \"parent\",\n          \"source\",\n          \"target\",\n          \"children\",\n          \"edges\"\n        ],\n        \"id\": \"7daf7e70-80f8-11eb-b536-9706ea4eeccc\",\n        \"parent\": \"1\",\n        \"source\": null,\n        \"target\": null,\n        \"mxObjectId\": \"mxCell#11\",\n        \"edges\": [\n          {\n            \"value\": \"Edge\",\n            \"geometry\": {\n              \"x\": 0,\n              \"y\": 0,\n              \"width\": 0,\n              \"height\": 0,\n              \"relative\": true\n            },\n            \"style\": null,\n            \"id\": \"80a7afd0-80f8-11eb-b536-9706ea4eeccc\",\n            \"edge\": true,\n            \"parent\": \"1\",\n            \"source\": \"7bb2eb20-80f8-11eb-b536-9706ea4eeccc\",\n            \"target\": \"7daf7e70-80f8-11eb-b536-9706ea4eeccc\"\n          }\n        ]\n      }\n    ]\n  }\n];\n\nexport default templates;\n","import { observable, action, computed, makeObservable } from 'mobx';\nimport templatesJSON from '../templates';\nimport { MxGraph2Json, stringifyWithoutCircular } from '../lib/MxGraphUtils';\n\nexport default class TemplatesStore {\n  @observable templates = templatesJSON;\n  @observable currentTemplate = templatesJSON[0];\n\n  constructor(rulesStore) {\n    this.rulesStore = rulesStore;\n    makeObservable(this)\n  }\n\n  @action\n  previewTemplate = (template) => {\n    this.currentTemplate = template;\n  }\n\n  @action\n  copyTemplate = () => {\n    this.rulesStore.applyTemplate(this.currentTemplate.configs, this.currentTemplate.layouts);\n  }\n\n  @action\n  publishTemplate = () => {\n    const template = {\n      id: +new Date(),\n      name: +new Date(),\n      description: +new Date(),\n      layouts: this.rulesStore.layouts,\n      configs: this.rulesStore.configs\n    }\n\n    console.error(stringifyWithoutCircular(template.layouts));\n\n    this.templates.push(template);\n  }\n}\n","import { observable, action, makeAutoObservable } from \"mobx\";\n\nconst fakePerson = {\n  id: 1,\n  name: \"Shaobo Liu\",\n  email: \"shaobo.liu@magicbean.ai\",\n  role: \"Data scientist\",\n  admin: true,\n  avatarUrl: \"https://i.pravatar.cc/32?img=58\",\n  joinedAt: \"March 25, 2021\",\n};\n\nconst fakeDataSource = {\n  type: \"postgresql\",\n  name: \"Event Table\",\n  host: \"localhost\",\n  port: \"5432\",\n  database: \"metrics\",\n  username: \"abc\",\n  password: \";SjK!c8er7e.#IX\",\n};\n\nclass AdminStore {\n  @observable users = [];\n  @observable dataSources = [];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  @action\n  createUser(params) {\n    // TODO: create user through API\n    this.users.push(params);\n  }\n\n  @action\n  fetchUsers() {\n    this.users = [fakePerson];\n  }\n\n  @action\n  fetchDataSources() {\n    this.dataSources = [fakeDataSource];\n  }\n\n  @action\n  createDataSource(params) {\n    this.dataSources.push(params)\n  }\n}\n\nexport default AdminStore;\n","import { observable, action, makeAutoObservable } from \"mobx\";\nimport imUpdate from \"immutability-helper\";\n\nclass ProjectStore {\n  @observable projects = [];\n  @observable currentProjectId = null;\n  @observable graphxClient = null;\n\n  constructor(rulesStore) {\n    makeAutoObservable(this);\n\n    this.rulesStore = rulesStore;\n    this.bindings = {};\n  }\n\n  registerTopics(stompWebsocket, topics) {\n    this.stompWebsocket = stompWebsocket;\n    topics.forEach((topic) => {\n      this.stompWebsocket.registerCallback(topic, (frame) =>\n        this.onStompMessage(frame)\n      );\n    });\n\n    this.fetchAllProjects();\n  }\n\n  _setCurrentProjectForRulesStore = (projectId) => {\n    this.currentProjectId = projectId;\n    this.rulesStore.currentProject = this.projects.find(\n      (p) => p.id == projectId\n    );\n    this.rulesStore.layouts = this.rulesStore.currentProject.layouts\n      ? this.rulesStore.currentProject.layouts.map((l) => JSON.parse(l.layout))\n      : [];\n    this.rulesStore.configs = this.rulesStore.currentProject.configs\n      ? this.rulesStore.currentProject.configs.map((c) => JSON.parse(c.config))\n      : [];\n    let nodesMap = {};\n    this.rulesStore.configs.forEach((n) => {\n      nodesMap[n.id] = n;\n    });\n    this.rulesStore.nodesMap = nodesMap;\n    this.rulesStore.currentNodeId = null;\n  };\n\n  onStompMessage(frame) {\n    let payload = JSON.parse(frame.body);\n    const { content, status, action, cid: ref } = payload;\n    switch (action) {\n      case \"AllProjects\":\n        this.projects = content;\n        this.invokeCallback(content, ref, status);\n        break;\n      case \"CreateProject\": // reply message\n        if (status === \"Success\") {\n          this.projects.push(content);\n          this.invokeCallback(content, ref, status);\n        }\n        break;\n      case \"CreatedProject\": // push message\n        this.projects.push(content);\n        break;\n      case \"UpdateProject\":\n        if (status == \"Success\") {\n          const projectIdx = this.projects.map((p) => p.id).indexOf(content.id);\n          this.projects = imUpdate(this.projects, {\n            $splice: [\n              [[projectIdx], 1, { ...this.projects[projectIdx], ...content }],\n            ],\n          });\n          // this._setCurrentProjectForRulesStore(content.id);\n          this.invokeCallback(content, ref, status);\n        }\n        break;\n      case \"UpdatedProject\":\n        const projectIdx = this.projects.map((p) => p.id).indexOf(content.id);\n        this.projects = imUpdate(this.projects, {\n          $splice: [\n            [[projectIdx], 1, { ...this.projects[projectIdx], ...content }],\n          ],\n        });\n        this._setCurrentProjectForRulesStore(content.id);\n\n        // update canvas layouts.\n        if (content.id == this.currentProjectId) {\n          this.graphxClient.render({ layouts: this.rulesStore.layouts });\n        }\n        break;\n      case \"DeleteProject\":\n        if (status == \"Success\") {\n          this.projects = this.projects.filter((p) => p.id != content.id);\n          this.invokeCallback(content, ref, status);\n        }\n        break;\n      case \"DeletedProject\":\n        this.projects = this.projects.filter((p) => p.id != content.id);\n        break;\n    }\n  }\n\n  invokeCallback(content, ref, status) {\n    if (ref && this.bindings[ref]) {\n      this.bindings[ref](content);\n      delete this.bindings[ref];\n    }\n  }\n\n  create = (project, callback) => {\n    const ref = this._makeBinding(callback);\n    this.stompWebsocket.send(\n      \"/app/create_project\",\n      { cid: ref },\n      JSON.stringify({ project })\n    );\n  };\n\n  update = (project, callback) => {\n    const ref = this._makeBinding(callback);\n    this.stompWebsocket.send(\n      \"/app/update_project\",\n      { cid: ref },\n      JSON.stringify(project)\n    );\n  };\n\n  fetchAllProjects = (callback) => {\n    const ref = this._makeBinding(callback);\n    this.stompWebsocket.send(\"/app/get_projects\", { cid: ref });\n  };\n\n  fetchAllProjectsIfNeeded = (callback) => {\n    if (this.projects.length === 0) {\n      this.fetchAllProjects(callback);\n    }\n  };\n\n  delete = (id, callback) => {\n    const ref = this._makeBinding(callback);\n    this.stompWebsocket.send(\n      \"/app/delete_project\",\n      { cid: ref },\n      JSON.stringify({ id })\n    );\n  };\n\n  setCurrentProject = (projectId) => {\n    if (this.projects.length > 0) {\n      this._setCurrentProjectForRulesStore(projectId);\n    } else {\n      this.fetchAllProjects(() => {\n        this._setCurrentProjectForRulesStore(projectId);\n      });\n    }\n  };\n\n  _makeBinding = (callback) => {\n    let cb = callback || function () {};\n    let ref = this.stompWebsocket.makeRef();\n    this.bindings[ref] = cb;\n    return ref;\n  };\n\n  setGraphXClient = (client) => {\n    this.graphxClient = client;\n  };\n}\n\nexport default ProjectStore;\n","import Ajv from 'ajv';\nimport transformerSchema from '../schema/transformer.json';\nimport configSchema from '../schema/config.json';\nimport mbeanSchema from '../schema/mbean.json';\nimport magicBeanNodeSchema from '../schema/magicBeanNode.json';\nimport workflowSchema from '../schema/workflow.json';\n\nconst ajv = new Ajv({strict: false});\najv.addSchema(configSchema);\najv.addSchema(transformerSchema);\najv.addSchema(magicBeanNodeSchema);\najv.addSchema(mbeanSchema);\nconst validator = ajv.compile(workflowSchema);\n\nexport default validator;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\nimport { createBrowserHistory } from \"history\";\nimport { RouterStore, syncHistoryWithStore } from \"mobx-react-router\";\nimport { Router } from \"react-router\";\nimport App from \"./App\";\nimport StompWebsocket from \"./services/StompWebsocket\";\nimport RulesStore from \"./stores/RulesStore\";\nimport QueriesStore from \"./stores/QueriesStore\";\nimport { getAuthStatusFromLocalStorage } from \"./utils/common\";\nimport UserStore from \"./stores/UserStore\";\nimport TemplatesStore from \"./stores/TemplatesStore\";\nimport AdminStore from \"./stores/AdminStore\";\nimport ProjectStore from \"./stores/ProjectStore\";\nimport jsonSchemaValidator from \"./utils/json-schema-validator\";\n\nimport \"./index.less\";\n\nlet stompWebsocket = new StompWebsocket(\"/stomp\");\n\nconst userStore = new UserStore();\nconst rulesStore = new RulesStore();\nconst projectStore = new ProjectStore(rulesStore);\nconst adminStore = new AdminStore();\nconst queriesStore = new QueriesStore();\nconst templatesStore = new TemplatesStore(rulesStore);\n\nconst browserHistory = createBrowserHistory();\nconst routingStore = new RouterStore();\n\nprojectStore.registerTopics(stompWebsocket, [\"/user/topic/projects\"]);\nuserStore.registerTopics(stompWebsocket, []);\nrulesStore.registerTopics(stompWebsocket);\n\nuserStore.test_authentication().then(() => {\n  stompWebsocket.connect();\n});\n\nconst stores = {\n  userStore,\n  rulesStore,\n  queriesStore,\n  templatesStore,\n  routingStore,\n  adminStore,\n  projectStore,\n};\n\nconst history = syncHistoryWithStore(browserHistory, routingStore);\n\nReactDOM.render(\n  <Provider {...stores}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}